{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/marcoslhc/projects/televisa/dash.js/externals/base64.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/EventBus.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/FactoryMaker.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/events/CoreEvents.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/events/Events.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/events/EventsBase.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/CommonEncryption.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/Protection.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/ProtectionEvents.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/controllers/ProtectionController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/controllers/ProtectionKeyController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/drm/KeySystemClearKey.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/drm/KeySystemPlayReady.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/drm/KeySystemWidevine.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/models/ProtectionModel_01b.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/models/ProtectionModel_21Jan2015.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/models/ProtectionModel_3Feb2014.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/servers/ClearKey.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/servers/DRMToday.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/servers/PlayReady.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/servers/Widevine.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/ClearKeyKeySet.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/KeyError.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/KeyMessage.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/KeyPair.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/KeySystemAccess.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/KeySystemConfiguration.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/MediaCapability.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/protection/vo/NeedKey.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/utils/ErrorHandler.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/vo/Error.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","Protection","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","UTF8","encode","c","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","_interopRequireDefault","obj","__esModule","default","EventBus","on","type","listener","scope","getHandlerIdx","handler","callback","handlers","off","idx","splice","trigger","args","hasOwnProperty","forEach","reset","handlersForType","result","instance","undefined","Object","defineProperty","value","_FactoryMakerJs","_FactoryMakerJs2","__dashjs_factory_name","getSingletonFactory","FactoryMaker","extend","name","childInstance","override","context","extensionContext","getExtensionContext","getSingletonInstance","className","singletonContexts","setSingletonInstance","getClassFactory","classConstructor","create","merge","apply","arguments","getInstance","extensionObject","extension","factory","parent","prop","extensions","_classCallCheck","Constructor","TypeError","_inherits","subClass","superClass","prototype","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","getPrototypeOf","_EventsBaseJs","_EventsBaseJs2","CoreEvents","_EventsBase","AST_IN_FUTURE","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CHUNK_APPENDED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUALITY_CHANGED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ALL_ELEMENTS_LOADED","XLINK_ELEMENT_LOADED","XLINK_READY","_CoreEventsJs","_CoreEventsJs2","Events","_CoreEvents","events","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","EventsBase","config","publicOnly","evt","indexOf","_externalsBase64Js","_externalsBase64Js2","CommonEncryption","cpArray","retVal","cp","schemeIdUri","toLowerCase","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","uuid","cpData","__text","buffer","data","dv","done","byteCursor","size","nextBox","systemID","psshDataSize","boxStart","byteLength","val","toString","createProtectionSystem","controller","protectionKeyController","_controllersProtectionKeyControllerJs2","setConfig","log","initialize","protectionModel","getProtectionModel","_controllersProtectionControllerJs2","adapter","eventBus","capabilities","setEncryptedMediaSupported","videoElement","videoModel","getElement","onencrypted","mediaKeys","navigator","requestMediaKeySystemAccess","_modelsProtectionModel_21Jan2015Js2","getAPI","APIS_ProtectionModel_3Feb2014","_modelsProtectionModel_3Feb2014Js2","api","APIS_ProtectionModel_01b","_modelsProtectionModel_01bJs2","apis","keys","_controllersProtectionControllerJs","_controllersProtectionKeyControllerJs","_ProtectionEventsJs","_ProtectionEventsJs2","_modelsProtectionModel_21Jan2015Js","_modelsProtectionModel_3Feb2014Js","_modelsProtectionModel_01bJs","_coreFactoryMakerJs","_coreFactoryMakerJs2","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","setMediaKeys","MediaKeys","release","error","message","ready","close","_coreEventsEventsBaseJs","_coreEventsEventsBaseJs2","ProtectionEvents","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_SYSTEM_SELECTED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","protectionEvents","ProtectionController","setup","keySystems","getKeySystems","pendingNeedKeyData","initialized","sessionType","_coreEventsEventsJs2","_ProtectionJs2","manifest","aInfo","vInfo","streamInfo","getStreamsInfo","audioInfo","getMediaInfoForType","videoInfo","mediaInfo","supportedKS","getSupportedKeySystemsFromContentProtection","contentProtection","selectKeySystem","createKeySession","initDataForKS","_CommonEncryptionJs2","getPSSHForKeySystem","currentInitData","getAllInitData","initDataEquals","systemString","loadKeySession","sessionID","removeKeySession","sessionToken","closeKeySession","setServerCertificate","serverCertificate","setMediaElement","element","onNeedKey","onKeyMessage","setSessionType","setProtectionData","protDataSet","getProtData","protData","keySystemString","fromManifest","audioCapabilities","videoCapabilities","_voMediaCapabilityJs2","codec","ksIdx","ksConfig","_voKeySystemConfigurationJs2","requestedKeySystems","ks","_ret","configs","onKeySystemAccessComplete","event","requestKeySystemAccess","keySystemAccess","onKeySystemSelected","getKeySystem","sendLicenseRequestCompleteEvent","keyMessage","messageType","licenseServerData","getLicenseServer","eventData","getSessionID","isClearKey","clearkeys","processClearKeyLicenseRequest","updateKeySession","xhr","XMLHttpRequest","url","serverURL","laURL","getLicenseServerURLFromInitData","getPSSHData","getServerURLFromMessage","open","getHTTPMethod","responseType","getResponseType","onload","status","getLicenseMessage","response","statusText","readyState","getErrorResponse","onabort","onerror","updateHeaders","headers","withCredentials","setRequestHeader","httpRequestHeaders","getRequestHeadersFromMessage","send","getLicenseRequestFromMessage","initDataType","abInitData","ArrayBuffer","isView","getSupportedKeySystems","_CommonEncryptionJs","_coreEventsEventsJs","_voMediaCapabilityJs","_voKeySystemConfigurationJs","_ProtectionJs","ProtectionKeyController","_drmKeySystemWidevineJs2","_drmKeySystemPlayReadyJs2","_drmKeySystemClearKeyJs2","clearkeyKeySystem","getKeySystemBySystemString","initData1","initData2","data1","data2","j","cps","cpIdx","schemeIdURI","getInitData","_serversDRMTodayJs2","_serversWidevineJs2","_serversPlayReadyJs2","_serversClearKeyJs2","getClearKeysFromProtectionData","_drmKeySystemClearKeyJs","_drmKeySystemWidevineJs","_drmKeySystemPlayReadyJs","_serversDRMTodayJs","_serversPlayReadyJs","_serversWidevineJs","_serversClearKeyJs","KeySystemClearKey","protectionData","clearkeySet","jsonMsg","JSON","parse","keyPairs","kids","clearkeyID","clearkey","_voKeyPairJs2","_voClearKeyKeySetJs2","parseInitDataFromContentProtection","_voKeyPairJs","_voClearKeyKeySetJs","KeySystemPlayReady","msg","xmlDoc","parser","DOMParser","dataview","messageFormat","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","licenseRequest","Challenge","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","set","setPlayReadyMessageFormat","format","_voErrorJs2","_voErrorJs","KeySystemWidevine","ProtectionModel_01b","pendingSessions","sessions","errHandler","_utilsErrorHandlerJs2","eventHandler","createEventHandler","removeEventListeners","ksConfigurations","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","_voKeySystemAccessJs2","mediaElement","addEventListener","moreSessionsAllowed","newSession","getExpirationTime","NaN","getSessionType","keyID","handleEvent","_voNeedKeyJs2","findSessionByID","sessionId","errorCode","systemCode","_voKeyErrorJs2","shift","mediaKeyMessageError","_voKeyMessageJs2","defaultURL","sessionArray","len","removeEventListener","_voNeedKeyJs","_voKeyErrorJs","_voKeyMessageJs","_voKeySystemAccessJs","_utilsErrorHandlerJs","ProtectionModel_21Jan2015","session","numSessions","removeSession","then","closed","closeKeySessionInternal","requestKeySystemAccessInternal","mksa","createMediaKeys","mkeys","createSession","createSessionToken","generateRequest","toJWK","update","load","success","remove","mediaKeySystemAccess","configuration","getConfiguration","token","expiration","getKeyStatuses","keyStatuses","ProtectionModel_3Feb2014","audios","audioIdx","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","bind","keySession","errorStr","destinationURL","ClearKey","substring","serverResponse","keypair","keyid","kid","replace","k","DRMToday","keySystemStr","com.widevine.alpha","license","com.microsoft.playready","PlayReady","Widevine","ClearKeyKeySet","numKeys","jwk","kty","alg","jwkString","stringify","buf","bView","KeyError","errorString","KeyMessage","KeyPair","KeySystemAccess","KeySystemConfiguration","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","MediaCapability","robustness","NeedKey","ErrorHandler","capabilityError","err","ERROR","downloadError","id","request","manifestError","timedTextError","ccContent","cc","mediaSourceError","mediaKeySessionError","_coreEventBusJs2","_coreEventBusJs","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_MANIFEST","DOWNLOAD_ERROR_ID_SIDX","DOWNLOAD_ERROR_ID_CONTENT","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_XLINK","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,SAAAL,EAAAK,YAAAC,WAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAC,EAAA1B,EAAAD,GCKA,YAAA,IAAI4B,KACJA,GAAKC,OAAS,SAASd,GAEnB,IAAK,GADDE,MACKG,EAAI,EAAGA,EAAIL,EAAEU,SAAUL,EAAG,CAC/B,GAAIU,GAAIf,EAAEgB,WAAWX,EACb,KAAJU,EACAb,EAAEe,KAAKF,GACI,KAAJA,GACPb,EAAEe,KAAK,IAAQF,GAAK,GACpBb,EAAEe,KAAK,IAAQ,GAAKF,IACT,MAAJA,GACPb,EAAEe,KAAK,IAAQF,GAAK,IACpBb,EAAEe,KAAK,IAAQ,GAAMF,GAAK,GAC1Bb,EAAEe,KAAK,IAAQ,GAAKF,KAEpBb,EAAEe,KAAK,IAAQF,GAAK,IACpBb,EAAEe,KAAK,IAAQ,GAAMF,GAAK,IAC1Bb,EAAEe,KAAK,IAAQ,GAAMF,GAAK,GAC1Bb,EAAEe,KAAK,IAAQ,GAAKF,IAG5B,MAAOb,IAEXW,EAAKK,OAAS,SAAShB,GAGnB,IAFA,GAAIC,MACAE,EAAI,EACDA,EAAIH,EAAEQ,QAAQ,CACjB,GAAIS,GAAIjB,EAAEG,IACF,KAAJc,IAEW,IAAJA,GACPA,GAAK,GAAKA,IAAM,EAChBA,GAAM,GAAKjB,EAAEG,MACF,IAAJc,GACPA,GAAK,GAAKA,IAAM,GAChBA,IAAM,GAAKjB,EAAEG,OAAS,EACtBc,GAAM,GAAKjB,EAAEG,OAEbc,GAAK,EAAIA,IAAM,GACfA,IAAM,GAAKjB,EAAEG,OAAS,GACtBc,IAAM,GAAKjB,EAAEG,OAAS,EACtBc,GAAM,GAAKjB,EAAEG,OAEjBF,EAAEc,KAAKG,OAAOC,aAAaF,IAE/B,MAAOhB,GAAEmB,KAAK,IAGlB,IAAIC,OACJ,SAAUC,GACN,GAAIC,GAAc,SAASvB,GAIvB,IAHA,GAAIG,GAAI,EACJF,KACAL,EAAI,EAAKI,EAAEQ,OAAS,EACjB,EAAIZ,KAAK,CACZ,GAAIqB,IAAKjB,EAAEG,IAAM,KAAOH,EAAEG,EAAE,IAAM,GAAKH,EAAEG,EAAE,EAC3CA,IAAK,EACLF,EAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,KAC3BhB,EAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,KAC3BhB,EAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,IAC3BhB,EAAEc,KAAKO,EAAEE,OAAO,GAAKP,IAEzB,GAAI,GAAMjB,EAAEQ,OAASL,EAAI,CACrB,GAAIc,IAAKjB,EAAEG,IAAM,KAAOH,EAAEG,EAAE,IAAM,EAClCF,GAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,KAC3BhB,EAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,KAC3BhB,EAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,IAC3BhB,EAAEc,KAAK,SACJ,IAAI,GAAMf,EAAEQ,OAASL,EAAI,CAC5B,GAAIc,GAAKjB,EAAEG,IAAM,EACjBF,GAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,KAC3BhB,EAAEc,KAAKO,EAAEE,OAAO,GAAMP,GAAK,KAC3BhB,EAAEc,KAAK,MAEX,MAAOd,GAAEmB,KAAK,KAEdK,EAAI,WAEJ,IAAK,GADDxB,MACKE,EAAE,EAAGA,EAAEmB,EAAEd,SAAUL,EACxBF,EAAEqB,EAAER,WAAWX,IAAMA,CAGzB,OADAF,GAAE,IAAIa,WAAW,IAAM,EAChBb,KAEPyB,EAAc,SAAS5B,GAIvB,IAHA,GAAIK,GAAI,EACJH,KACAJ,EAAI,EAAKE,EAAEU,OAAS,EACjB,EAAIZ,KAAK,CACZ,GAAIqB,IAAKQ,EAAE3B,EAAEgB,WAAWX,KAAO,KAAOsB,EAAE3B,EAAEgB,WAAWX,EAAE,KAAO,KAAOsB,EAAE3B,EAAEgB,WAAWX,EAAE,KAAO,GAAKsB,EAAE3B,EAAEgB,WAAWX,EAAE,GACnHH,GAAEe,KAAK,IAAOE,GAAK,IACnBjB,EAAEe,KAAK,IAAOE,GAAK,GACnBjB,EAAEe,KAAK,IAAME,GACbd,GAAK,EAUT,MARIH,KACI,KAAOF,EAAE0B,OAAOrB,EAAE,IAClBH,EAAE2B,MACF3B,EAAE2B,OACK,KAAO7B,EAAE0B,OAAOrB,EAAE,IACzBH,EAAE2B,OAGH3B,GAEP4B,IACJA,GAAMhB,OAAS,SAASd,GAEpB,IAAK,GADDE,MACKG,EAAI,EAAGA,EAAEL,EAAEU,SAAUL,EAC1BH,EAAEe,KAAKjB,EAAEgB,WAAWX,GAExB,OAAOH,IAEX4B,EAAMZ,OAAS,SAAShB,GACpB,IAAK,GAAIG,GAAI,EAAGA,EAAEL,EAAEU,SAAUL,EAC1BF,EAAEE,GAAKe,OAAOC,aAAalB,EAAEE,GAEjC,OAAOF,GAAEmB,KAAK,KAElBC,EAAOK,YAAc,SAAS5B,GAC1B,GAAIE,GAAI0B,EAAY5B,EACpB,OAAO,IAAI+B,YAAW7B,IAE1BqB,EAAOS,YAAc,SAAShC,GAC1B,GAAIE,GAAI4B,EAAMhB,OAAOd,EACrB,OAAOyB,GAAYvB,IAEvBqB,EAAOU,YAAc,SAASjC,GAC1B,GAAIG,GAAIyB,EAAY5B,EACpB,OAAO8B,GAAMZ,OAAOf,IAExBoB,EAAOT,OAAS,SAASd,GACrB,GAAIE,GAAIW,EAAKC,OAAOd,EACpB,OAAOyB,GAAYvB,IAEvBqB,EAAOL,OAAS,SAASlB,GACrB,GAAIE,GAAI0B,EAAY5B,EACpB,OAAOa,GAAKK,OAAOhB,KAExB,oEAYoB,mBAAZjB,KACPA,EAAQiC,OAASK,EAAOL,OACxBjC,EAAQ2C,YAAcL,EAAOK,qCChIjC,YAMA,SAASM,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzF,QAASG,KAML,QAASC,GAAGC,EAAMC,EAAUC,GACxB,IAAKF,EACD,KAAM,IAAIlC,OAAM,yCAGpB,KAAKmC,GAAkC,kBAAdA,GACrB,KAAM,IAAInC,OAAM,gCAAkCmC,EAGtD,MAAIE,EAAcH,EAAMC,EAAUC,IAAU,GAA5C,CAEA,GAAIE,IACAC,SAAUJ,EACVC,MAAOA,EAGXI,GAASN,GAAQM,EAASN,OAC1BM,EAASN,GAAMvB,KAAK2B,IAGxB,QAASG,GAAIP,EAAMC,EAAUC,GACzB,GAAKF,GAASC,GAAaK,EAASN,GAApC,CAEA,GAAIQ,GAAML,EAAcH,EAAMC,EAAUC,EAE9B,GAANM,GAEJF,EAASN,GAAMS,OAAOD,EAAK,IAG/B,QAASE,GAAQV,EAAMW,GACnB,GAAKX,GAASM,EAASN,GAAvB,CAIA,GAFAW,EAAOA,MAEHA,EAAKC,eAAe,QACpB,KAAM,IAAI9C,OAAM,kDAGpB6C,GAAKX,KAAOA,EAEZM,EAASN,GAAMa,QAAQ,SAAUT,GAC7BA,EAAQC,SAASpC,KAAKmC,EAAQF,MAAOS,MAI7C,QAASG,KACLR,KAGJ,QAASH,GAAcH,EAAMC,EAAUC,GACnC,GAAIa,GAAkBT,EAASN,GAC3BgB,EAAS,EAEb,KAAKD,GAA8C,IAA3BA,EAAgB7C,OAAc,MAAO8C,EAE7D,KAAK,GAAInD,GAAI,EAAGA,EAAIkD,EAAgB7C,OAAQL,IACxC,GAAIkD,EAAgBlD,GAAGwC,WAAaJ,KAAcC,GAASA,IAAUa,EAAgBlD,GAAGqC,OAAQ,MAAOrC,EAG3G,OAAOmD,GAhEX,GAAIC,GAAQC,OACRZ,IAyEJ,OAPAW,IACIlB,GAAIA,EACJQ,IAAKA,EACLG,QAASA,EACTI,MAAOA,GAzEfK,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIC,GAAkBlD,EARG,qBAUrBmD,EAAmB7B,EAAuB4B,EAuE9CxB,GAAS0B,sBAAwB,WAUjC/E,EAAQ,WATO8E,EAAA,WAAaE,oBAAoB3B,GAUhDpD,EAAOD,QAAUA,EAAQ,wDCzFzB,YAEA0E,QAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAHX,IAAIK,GAAgB,WAMhB,QAASC,GAAOC,EAAMC,EAAeC,EAAUC,GAC3C,GAAIC,GAAmBC,EAAoBF,IACtCC,EAAiBJ,IAASC,IAC3BG,EAAiBJ,IAASX,SAAUY,EAAeC,SAAUA,IAgBrE,QAASI,GAAqBH,EAASI,GACnC,IAAK,GAAItE,KAAKuE,GAAmB,CAC7B,GAAIzC,GAAMyC,EAAkBvE,EAC5B,IAAI8B,EAAIoC,UAAYA,GAAWpC,EAAIiC,OAASO,EACxC,MAAOxC,GAAIsB,SAGnB,MAAO,MAYX,QAASoB,GAAqBN,EAASI,EAAWlB,GAC9C,IAAK,GAAIpD,KAAKuE,GAAmB,CAC7B,GAAIzC,GAAMyC,EAAkBvE,EAC5B,IAAI8B,EAAIoC,UAAYA,GAAWpC,EAAIiC,OAASO,EAExC,YADAC,EAAkBvE,GAAGoD,SAAWA,GAIxCmB,EAAkB3D,MAAOmD,KAAMO,EAAWJ,QAASA,EAASd,SAAUA,IAG1E,QAASqB,GAAgBC,GACrB,MAAO,UAAUR,GAIb,MAHgBb,UAAZa,IACAA,OAGAS,OAAQ,WACJ,MAAOC,GAAMF,EAAiBf,sBAAuBe,EAAiBG,OAAQX,QAASA,GAAWY,WAAYZ,EAASY,cAMvI,QAASlB,GAAoBc,GACzB,MAAO,UAAUR,GACb,GAAId,GAAQC,MAIZ,OAHgBA,UAAZa,IACAA,OAGAa,YAAa,WAUT,MARK3B,KACDA,EAAWiB,EAAqBH,EAASQ,EAAiBf,wBAGzDP,IACDA,EAAWwB,EAAMF,EAAiBf,sBAAuBe,EAAiBG,OAAQX,QAASA,GAAWY,WAAYZ,EAASY,WAC3HP,EAAkB3D,MAAOmD,KAAMW,EAAiBf,sBAAuBO,QAASA,EAASd,SAAUA,KAEhGA,KAMvB,QAASwB,GAAMb,EAAMW,EAAkBR,EAASpB,GAC5C,GAAIqB,GAAmBC,EAAoBF,GACvCc,EAAkBb,EAAiBJ,EACvC,IAAIiB,EAAiB,CACjB,GAAIC,GAAYD,EAAgB5B,QAChC,KAAI4B,EAAgBf,SAQhB,MAAOgB,GAAUJ,OAAQX,QAASA,EAASgB,QAAS9B,GAAWN,EAP/DmC,GAAYA,EAAUJ,OAAQX,QAASA,EAASgB,QAAS9B,EAAU+B,OAAQT,GAAmB5B,EAC9F,KAAK,GAAMsC,KAAQH,GACXP,EAAiB3B,eAAeqC,KAChCV,EAAiBU,GAAQH,EAAUG,IAOnD,MAAOV,GAGX,QAASN,GAAoBF,GACzB,GAAIC,GAAgBd,MASpB,OARAgC,GAAWrC,QAAQ,SAAUlB,GACrBA,IAAQoC,IACRC,EAAmBrC,KAGtBqC,IACDA,EAAmBkB,EAAWzE,KAAKsD,IAEhCC,EAtHX,GAAIf,GAAQC,OACRgC,KACAd,IA+HJ,OARAnB,IACIU,OAAQA,EACRO,qBAAsBA,EACtBG,qBAAsBA,EACtBZ,oBAAqBA,EACrBa,gBAAiBA,KAazB7F,GAAQ,WANOiF,EAOfhF,EAAOD,QAAUA,EAAQ,mCCjJzB,YAQA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,QAASwD,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIH,WAAU,iEAAoEG,GAAcD,GAAUE,UAAYtC,OAAOqB,OAAOgB,GAAcA,EAAWC,WAAaC,aAAerC,MAAOkC,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeL,IAAYrC,OAAO2C,eAAiB3C,OAAO2C,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAVjerC,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAGX,IAAI2C,GAAO,SAAaC,EAAIC,EAAKC,GAAqC,IAA9B,GAAIC,IAAS,EAAwBA,GAAQ,CAAE,GAAIC,GAASJ,EAAIK,EAAWJ,EAAKK,EAAWJ,CAAIC,IAAU,EAAsB,OAAXC,IAAiBA,EAASG,SAASf,UAAU,IAAKgB,GAAOtD,OAAOuD,yBAAyBL,EAAQC,EAAU,IAAcpD,SAATuD,EAAL,CAA6O,GAAI,SAAWA,GAAQ,MAAOA,GAAKpD,KAAgB,IAAIsD,GAASF,EAAKG,GAAI,IAAgB1D,SAAXyD,EAAwB,MAAmB,OAAQA,GAAO1G,KAAKsG,GAA/V,GAAIvB,GAAS7B,OAAO0D,eAAeR,EAAQ,IAAgB,OAAXrB,EAAmB,MAA2BiB,GAAKjB,EAAOkB,EAAOI,EAASH,EAAOI,EAASH,GAAU,EAAKK,EAAQzB,EAAS9B,SAQxc4D,EAAgB1G,EAdG,mBAgBnB2G,EAAiBrF,EAAuBoF,GAVtCE,EAAU,SAAAC,GACA,QADVD,KAqBE7B,EAAgBlG,KArBlB+H,GAEEhB,EAAA7C,OAAA0D,eAFFG,EAAUvB,WAAA,cAAAxG,MAAAgB,KAAAhB,MAGRA,KAAKiI,cAAgB,cACrBjI,KAAKkI,oBAAsB,qBAC3BlI,KAAKmI,eAAiB,gBACtBnI,KAAKoI,qBAAuB,qBAC5BpI,KAAKqI,eAAiB,gBACtBrI,KAAKsI,8BAAgC,6BACrCtI,KAAKuI,eAAiB,gBACtBvI,KAAKwI,sBAAwB,sBAC7BxI,KAAKyI,sBAAwB,sBAC7BzI,KAAK0I,oBAAsB,oBAC3B1I,KAAK2I,2BAA6B,2BAClC3I,KAAK4I,yBAA2B,yBAChC5I,KAAK6I,sBAAwB,uBAC7B7I,KAAK8I,qBAAuB,qBAC5B9I,KAAK+I,eAAiB,gBACtB/I,KAAKgJ,yBAA2B,yBAChChJ,KAAKiJ,2BAA6B,0BAClCjJ,KAAKkJ,kBAAoB,mBACzBlJ,KAAKmJ,iBAAmB,kBACxBnJ,KAAKoJ,iBAAmB,kBACxBpJ,KAAKqJ,sBAAwB,sBAC7BrJ,KAAKsJ,gBAAkB,iBACvBtJ,KAAKuJ,eAAiB,gBACtBvJ,KAAKwJ,uBAAyB,wBAC9BxJ,KAAKyJ,gBAAkB,iBACvBzJ,KAAK0J,mCAAqC,kCAC1C1J,KAAK2J,8BAAgC,8BACrC3J,KAAK4J,8BAAgC,8BACrC5J,KAAK6J,iBAAmB,kBACxB7J,KAAK8J,2BAA6B,2BAClC9J,KAAK+J,iBAAmB,kBACxB/J,KAAKgK,mBAAqB,oBAC1BhK,KAAKiK,yBAA2B,yBAChCjK,KAAKkK,qBAAuB,qBAC5BlK,KAAKmK,+BAAiC,8BACtCnK,KAAKoK,sBAAwB,sBAC7BpK,KAAKqK,uBAAyB,uBAC9BrK,KAAKsK,0BAA4B,yBACjCtK,KAAKuK,qBAAuB,qBAC5BvK,KAAKwK,YAAc,aAwBvB,MAhDAnE,GAlBE0B,EAAUC,GAAVD,GAmEHD,EAAe,WAElBtI,GAAQ,WAvBOuI,EAwBftI,EAAOD,QAAUA,EAAQ,sDCxEzB,YAQA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,QAASwD,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIH,WAAU,iEAAoEG,GAAcD,GAAUE,UAAYtC,OAAOqB,OAAOgB,GAAcA,EAAWC,WAAaC,aAAerC,MAAOkC,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeL,IAAYrC,OAAO2C,eAAiB3C,OAAO2C,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAVjerC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAGT,IAAI2C,GAAO,SAAaC,EAAIC,EAAKC,GAAqC,IAA9B,GAAIC,IAAS,EAAwBA,GAAQ,CAAE,GAAIC,GAASJ,EAAIK,EAAWJ,EAAKK,EAAWJ,CAAIC,IAAU,EAAsB,OAAXC,IAAiBA,EAASG,SAASf,UAAU,IAAKgB,GAAOtD,OAAOuD,yBAAyBL,EAAQC,EAAU,IAAcpD,SAATuD,EAAL,CAA6O,GAAI,SAAWA,GAAQ,MAAOA,GAAKpD,KAAgB,IAAIsD,GAASF,EAAKG,GAAI,IAAgB1D,SAAXyD,EAAwB,MAAmB,OAAQA,GAAO1G,KAAKsG,GAA/V,GAAIvB,GAAS7B,OAAO0D,eAAeR,EAAQ,IAAgB,OAAXrB,EAAmB,MAA2BiB,GAAKjB,EAAOkB,EAAOI,EAASH,EAAOI,EAASH,GAAU,EAAKK,EAAQzB,EAAS9B,SAQxcwG,EAAgBtJ,EAdG,mBAgBnBuJ,EAAiBjI,EAAuBgI,GAftCE,EAAM,SAAAC,GAoBV,QApBID,KAqBFzE,EAAgBlG,KArBd2K,GAuBF5D,EAAK7C,OAAO0D,eAvBV+C,EAAMnE,WAAA,cAAAxG,MAAAyF,MAAAzF,KAAA0F,WA0BV,MARAW,GAlBIsE,EAAMC,GAAND,GA2BHD,EAAe,YAzBdG,EAAS,GAAIF,EA4BjBnL,GAAQ,WA3BOqL,EA4BfpL,EAAOD,QAAUA,EAAQ,sDChCzB,YAQA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCANhHlC,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAGX,IAAI0G,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMhK,OAAQL,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAGsK,GAAYxE,WAAawE,EAAWxE,aAAc,EAAMwE,EAAYtE,cAAe,EAAU,SAAWsE,KAAYA,EAAWvE,UAAW,GAAKzC,OAAQC,eAAe6G,EAAQE,EAAWC,IAAKD,IAAgB,MAAQ,UAAU/E,EAAaiF,EAAYC,GAAgJ,MAA7HD,IAAYL,EAAiB5E,EAAYK,UAAW4E,GAAiBC,GAAaN,EAAiB5E,EAAakF,GAAqBlF,MAN3hBmF,EAAU,WAWZ,QAXEA,KAYEpF,EAAgBlG,KAZlBsL,GA+BF,MAhBAR,GAfEQ,IAgBEH,IAAK,SACL/G,MAhBG,SAACyG,EAAQU,GACZ,GAAKV,EAAL,CAEA,GAAIhG,GAAW0G,EAASA,EAAO1G,UAAW,EACtC2G,EAAaD,EAASA,EAAOC,YAAa,CAG9C,KAAK,GAAMC,KAAOZ,IACTA,EAAOlH,eAAe8H,IAASzL,KAAKyL,KAAS5G,GAC9C2G,GAAiD,KAAnCX,EAAOY,GAAKC,QAAQ,aACtC1L,KAAKyL,GAAOZ,EAAOY,SAXzBH,IAkCN9L,GAAQ,WAjBO8L,EAkBf7L,EAAOD,QAAUA,EAAQ,mCCtCzB,YAQA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,QAASwD,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCARhHlC,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAGX,IAAI0G,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMhK,OAAQL,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAGsK,GAAYxE,WAAawE,EAAWxE,aAAc,EAAMwE,EAAYtE,cAAe,EAAU,SAAWsE,KAAYA,EAAWvE,UAAW,GAAKzC,OAAQC,eAAe6G,EAAQE,EAAWC,IAAKD,IAAgB,MAAQ,UAAU/E,EAAaiF,EAAYC,GAAgJ,MAA7HD,IAAYL,EAAiB5E,EAAYK,UAAW4E,GAAiBC,GAAaN,EAAiB5E,EAAakF,GAAqBlF,MAM7hBwF,EAAqBxK,EAZN,gCAcfyK,EAAsBnJ,EAAuBkJ,GAZ3CE,EAAgB,WAelB,QAfEA,KAgBE3F,EAAgBlG,KAhBlB6L,GAsMF,MAnLAf,GAnBEe,EAAgB,OAoBdV,IAAK,4BAUL/G,MArB4B,SAAC0H,GAE7B,IAAK,GADDC,GAAS,KACJnL,EAAI,EAAGA,EAAIkL,EAAQ7K,SAAUL,EAAG,CACrC,GAAIoL,GAAKF,EAAQlL,EACoB,sCAAjCoL,EAAGC,YAAYC,eACgB,SAA3BF,EAAG5H,MAAM8H,gBACbH,EAASC,GAEjB,MAAOD,MA6BPZ,IAAK,cACL/G,MArBc,SAAC+H,GACf,GAAIC,GAAS,EACTC,EAAO,GAAIC,UAASH,GAGpBI,EAAUF,EAAKG,SAASJ,EAS5B,OAPAA,IAAU,GAENG,EAAU,IACVH,GAAU,EAAK,GAAKC,EAAKI,UAAUL,IAGvCA,GAAU,EACHD,EAAKO,MAAMN,MAmClBjB,IAAK,sBACL/G,MAvBsB,SAACuI,EAAWC,GAClC,GAAIC,GAAWhB,EAAiBiB,cAAcF,EAC9C,OAAIC,GAASlJ,eAAegJ,EAAUI,KAAKb,eAChCW,EAASF,EAAUI,KAAKb,eAE5B,QAkCPf,IAAK,qCACL/G,MAzBqC,SAAC4I,GACtC,MAAI,QAAUA,GACHpB,EAAA,WAAOzJ,YAAY6K,EAAOb,KAAKc,QAAQC,OAE3C,QAsCP/B,IAAK,gBACL/G,MA3BgB,SAAC+I,GAEjB,GAAa,OAATA,EACA,QAQJ,KANA,GAAIC,GAAK,GAAId,UAASa,GAClBE,GAAO,EACPlB,KAGAmB,EAAa,GACTD,GAAM,CAEV,GAAIE,GACAC,EACAjB,EACAkB,EACAC,EACAC,EAAWL,CAEf,IAAIA,GAAcF,EAAGF,OAAOU,WACxB,KAQJ,IALAL,EAAOH,EAAGX,UAAUa,GACpBE,EAAUF,EAAaC,EACvBD,GAAc,EAGmB,aAA7BF,EAAGX,UAAUa,GAQjB,GAJAA,GAAc,EAGdf,EAAUa,EAAGZ,SAASc,GACN,IAAZf,GAA6B,IAAZA,EAArB,CAIAe,IAEAA,GAAc,EAGdG,EAAW,EACX,IAAI7M,GAAGiN,CACP,KAAKjN,EAAI,EAAO,EAAJA,EAAOA,IACfiN,EAAMT,EAAGZ,SAASc,EAAa1M,GAAGkN,SAAS,IAC3CL,GAA4B,IAAhBI,EAAK5M,OAAgB,IAAM4M,EAAMA,CAIjD,KAFAP,GAAc,EACdG,GAAY,IACP7M,EAAI,EAAO,EAAJA,EAAOA,IACfiN,EAAMT,EAAGZ,SAASc,EAAa1M,GAAGkN,SAAS,IAC3CL,GAA4B,IAAhBI,EAAK5M,OAAgB,IAAM4M,EAAMA,CAIjD,KAFAP,GAAc,EACdG,GAAY,IACP7M,EAAI,EAAO,EAAJA,EAAOA,IACfiN,EAAMT,EAAGZ,SAASc,EAAa1M,GAAGkN,SAAS,IAC3CL,GAA4B,IAAhBI,EAAK5M,OAAgB,IAAM4M,EAAMA,CAIjD,KAFAP,GAAc,EACdG,GAAY,IACP7M,EAAI,EAAO,EAAJA,EAAOA,IACfiN,EAAMT,EAAGZ,SAASc,EAAa1M,GAAGkN,SAAS,IAC3CL,GAA4B,IAAhBI,EAAK5M,OAAgB,IAAM4M,EAAMA,CAIjD,KAFAP,GAAc,EACdG,GAAY,IACP7M,EAAI,EAAO,EAAJA,EAAOA,IACfiN,EAAMT,EAAGZ,SAASc,EAAa1M,GAAGkN,SAAS,IAC3CL,GAA4B,IAAhBI,EAAK5M,OAAgB,IAAM4M,EAAMA,CAEjDP,IAAc,EAEdG,EAAWA,EAASvB,cAGpBwB,EAAeN,EAAGX,UAAUa,GAC5BA,GAAc,EAGdnB,EAAKsB,GAAYL,EAAGF,OAAOR,MAAMiB,EAAUH,GAC3CF,EAAaE,MAhDTF,GAAaE,MARbF,GAAaE,EA2DrB,MAAOrB,OA7KTN,IAyMNrM,GAAQ,WAxBOqM,EAyBfpM,EAAOD,QAAUA,EAAQ,mEC7MzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAkEzF,QAASxC,KAYL,QAAS6N,GAAuBxC,GAE5B,GAAIyC,GAAa,KAEbC,GAA0B,EAAAC,EAAA,YAAwBpJ,GAASa,aAC/DsI,GAAwBE,WAAWC,IAAK7C,EAAO6C,MAC/CH,EAAwBI,YAExB,IAAIC,GAAmBC,EAAmBhD,EAY1C,QAVKyC,GAAcM,IACfN,GAAa,EAAAQ,EAAA,YAAqB1J,GAASS,QACvC+I,gBAAiBA,EACjBL,wBAAyBA,EACzBQ,QAASlD,EAAOkD,QAChBC,SAAUnD,EAAOmD,SACjBN,IAAK7C,EAAO6C,MAEhB7C,EAAOoD,aAAaC,4BAA2B,IAE5CZ,EAGX,QAASO,GAAmBhD,GAExB,GAAI6C,GAAM7C,EAAO6C,IACbM,EAAWnD,EAAOmD,SAClBG,EAAetD,EAAOuD,WAAWC,YAErC,OAAiC9K,UAA7B4K,EAAaG,aACc/K,SAA3B4K,EAAaI,WAC6BhL,SAA1CiL,UAAUC,6BACuC,kBAA1CD,WAAUC,6BAEjBf,EAAI,iEACG,EAAAgB,EAAA,YAA0BtK,GAASS,QAAQ6I,IAAKA,EAAKM,SAAUA,KAE/DW,EAAOR,EAAcS,IAE5BlB,EAAI,gEACG,EAAAmB,EAAA,YAAyBzK,GAASS,QAAQ6I,IAAKA,EAAKM,SAAUA,EAAUc,IAAKH,EAAOR,EAAcS,MAElGD,EAAOR,EAAcY,IAE5BrB,EAAI,2DACG,EAAAsB,EAAA,YAAoB5K,GAASS,QAAQ6I,IAAKA,EAAKM,SAAUA,EAAUc,IAAKH,EAAOR,EAAcY,OAIpGrB,EAAI,4GACG,MAKf,QAASiB,GAAOR,EAAcc,GAE1B,IAAK,GAAI/O,GAAI,EAAGA,EAAI+O,EAAK1O,OAAQL,IAAK,CAClC,GAAI4O,GAAMG,EAAK/O,EAGf,IAAsD,kBAA3CiO,GAAaW,EAAItL,OAAO0L,KAAKJ,GAAK,KAI7C,MAAOA,GAGX,MAAO,MA9EX,GAAIxL,GAAQC,OACRa,EAAU9E,KAAK8E,OAoFnB,OAJAd,IACI+J,uBAAwBA,GA1JhC7J,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIyL,GAAqC1O,EARR,yCAU7BqN,EAAsC/L,EAAuBoN,GAE7DC,EAAwC3O,EAXR,4CAahC+M,EAAyCzL,EAAuBqN,GAEhEC,EAAsB5O,EAdG,yBAgBzB6O,EAAuBvN,EAAuBsN,GAE9CE,EAAqC9O,EAjBH,yCAmBlCiO,EAAsC3M,EAAuBwN,GAE7DC,EAAoC/O,EApBH,wCAsBjCoO,EAAqC9M,EAAuByN,GAE5DC,EAA+BhP,EAvBH,mCAyB5BuO,EAAgCjN,EAAuB0N,GAEvDC,EAAsBjP,EA1BD,8BA4BrBkP,EAAuB5N,EAAuB2N,GA1B5CX,IAIEa,mBAAoB,qBACpBC,OAAQ,SACRC,iBAAkB,mBAGlBC,QAAS,UACTC,SAAU,WACVC,SAAU,WACVC,WAAY,eAKZN,mBAAoB,2BACpBC,OAAQ,eACRC,iBAAkB,yBAGlBC,QAAS,gBACTC,SAAU,iBACVC,SAAU,iBACVC,WAAY,qBAIdtB,IAKEuB,aAAc,eAEdC,UAAW,YAEXC,QAAS,QAGTN,QAAS,UACTO,MAAO,WACPC,QAAS,aACTC,MAAO,WACPC,MAAO,aAKPN,aAAc,iBAEdC,UAAW,cAEXC,QAAS,QAETN,QAAS,YACTO,MAAO,aACPC,QAAS,eACTC,MAAO,aACPC,MAAO,cA8FfjR,GAAWqE,sBAAwB,YACnC,IAAIuB,GAAUuK,EAAA,WAAahL,gBAAgBnF,EAC3C4F,GAAQ+E,OAAMmF,EAAA,WAqBdxQ,EAAQ,WApBOsG,EAqBfrG,EAAOD,QAAUA,EAAQ,8SC1LzB,YAQA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,QAASwD,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIH,WAAU,iEAAoEG,GAAcD,GAAUE,UAAYtC,OAAOqB,OAAOgB,GAAcA,EAAWC,WAAaC,aAAerC,MAAOkC,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeL,IAAYrC,OAAO2C,eAAiB3C,OAAO2C,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAVjerC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAGT,IAAI2C,GAAO,SAAaC,EAAIC,EAAKC,GAAqC,IAA9B,GAAIC,IAAS,EAAwBA,GAAQ,CAAE,GAAIC,GAASJ,EAAIK,EAAWJ,EAAKK,EAAWJ,CAAIC,IAAU,EAAsB,OAAXC,IAAiBA,EAASG,SAASf,UAAU,IAAKgB,GAAOtD,OAAOuD,yBAAyBL,EAAQC,EAAU,IAAcpD,SAATuD,EAAL,CAA6O,GAAI,SAAWA,GAAQ,MAAOA,GAAKpD,KAAgB,IAAIsD,GAASF,EAAKG,GAAI,IAAgB1D,SAAXyD,EAAwB,MAAmB,OAAQA,GAAO1G,KAAKsG,GAA/V,GAAIvB,GAAS7B,OAAO0D,eAAeR,EAAQ,IAAgB,OAAXrB,EAAmB,MAA2BiB,GAAKjB,EAAOkB,EAAOI,EAASH,EAAOI,EAASH,GAAU,EAAKK,EAAQzB,EAAS9B,SAQxcmN,EAA0BjQ,EAdP,mCAgBnBkQ,EAA2B5O,EAAuB2O,GAXhDE,EAAgB,SAAAtJ,GAMN,QANVsJ,KA4BFpL,EAAgBlG,KA5BdsR,GAOEvK,EAAA7C,OAAA0D,eAPF0J,EAAgB9K,WAAA,cAAAxG,MAAAgB,KAAAhB,MAedA,KAAKuR,qBAAuB,qBAO5BvR,KAAKwR,6BAA+B,4BAWpCxR,KAAKyR,UAAY,kBAMjBzR,KAAK0R,UAAY,kBAOjB1R,KAAK2R,YAAc,oBAOnB3R,KAAK4R,mBAAqB,0BAO1B5R,KAAK6R,oBAAsB,2BAO3B7R,KAAK8R,oBAAsB,2BAQ3B9R,KAAK+R,qBAAuB,4BAO5B/R,KAAKgS,2BAA6B,0BAOlChS,KAAKiS,oBAAsB,2BAO3BjS,KAAKkS,yBAA2B,gCAMhClS,KAAKmS,SAAW,UAMhBnS,KAAKoS,mBAAqB,2BAM1BpS,KAAKqS,qBAAuB,6BAO5BrS,KAAKsS,2BAA6B,2BAOlCtS,KAAKuS,kBAAqB,6BAO1BvS,KAAKwS,uBAAyB,uBAyBpC,MA7IAnM,GAnBIiL,EAAgBtJ,GAAhBsJ,GAiKHD,EAAyB,YAtBxBoB,EAAmB,GAAInB,EAyB3B9R,GAAQ,WAxBOiT,EAyBfhT,EAAOD,QAAUA,EAAQ,uEC1KzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAczF,QAASgQ,GAAqBnH,GAkB1B,QAASoH,KACLC,EAAa3E,EAAwB4E,gBACrCC,KACAC,GAAc,EACdC,EAAc,YAEdC,EAAA,WAAOvO,OAAOwO,EAAA,WAAWrI,QAkB7B,QAASwD,GAAW8E,EAAUC,EAAOC,GAMjC,IAAKN,EAAa,CAEd,GAAIO,EAECF,IAAUC,IAGXC,EAAa7E,EAAQ8E,eAAeJ,GAAU,IAGlDK,EAAYJ,IAAUE,EAAa7E,EAAQgF,oBAAoBN,EAAUG,EAAY,SAAW,MAChGI,EAAYL,IAAUC,EAAa7E,EAAQgF,oBAAoBN,EAAUG,EAAY,SAAW,KAEhG,IAAIK,GAAYD,EAAcA,EAAYF,EAItCI,EAAc3F,EAAwB4F,4CAA4CF,EAAUG,kBAC5FF,IAAeA,EAAY3S,OAAS,GACpC8S,EAAgBH,GAAa,GAGjCb,GAAc,GAiBtB,QAASiB,GAAiBpH,GACtB,GAAIqH,GAAgBC,EAAA,WAAiBC,oBAAoBxH,EAAWC,EACpE,IAAIqH,EAAe,CAIf,IAAK,GADDG,GAAkB9F,EAAgB+F,iBAC7BzT,EAAI,EAAGA,EAAIwT,EAAgBnT,OAAQL,IACxC,GAAIqN,EAAwBqG,eAAeL,EAAeG,EAAgBxT,IAEtE,WADAwN,GAAI,0DAIZ,KACIE,EAAgB0F,iBAAiBC,EAAejB,GAClD,MAAOhC,GACLtC,EAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAM,KAAM6D,MAAO,+BAAiCA,EAAMC,eAG5GvC,GAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAM,KAAM6D,MAAO,0BAA4BrE,EAAU4H,aAAe,sFAa9H,QAASC,GAAeC,GACpBnG,EAAgBkG,eAAeC,GAenC,QAASC,GAAiBC,GACtBrG,EAAgBoG,iBAAiBC,GAarC,QAASC,GAAgBD,GACrBrG,EAAgBsG,gBAAgBD,GAcpC,QAASE,GAAqBC,GAC1BxG,EAAgBuG,qBAAqBC,GAazC,QAASC,GAAgBC,GACjBA,GACA1G,EAAgByG,gBAAgBC,GAChCtG,EAAS5L,GAAGmQ,EAAA,WAAOd,SAAU8C,EAAWjV,MACxC0O,EAAS5L,GAAGmQ,EAAA,WAAO1B,qBAAsB2D,EAAclV,OACpC,OAAZgV,IACP1G,EAAgByG,gBAAgBC,GAChCtG,EAASpL,IAAI2P,EAAA,WAAOd,SAAU8C,EAAWjV,MACzC0O,EAASpL,IAAI2P,EAAA,WAAO1B,qBAAsB2D,EAAclV,OAYhE,QAASmV,GAAe/Q,GACpB4O,EAAc5O,EAYlB,QAASgR,GAAkBjI,GACvBkI,EAAclI,EAYlB,QAAStJ,KACLkR,EAAgB,MAEhBpI,EAAY1I,OAERqK,IACAA,EAAgBzK,QAChByK,EAAkB,MAQ1B,QAASgH,GAAY3I,GACjB,GAAI4I,GAAW,KACXC,EAAkB7I,EAAU4H,YAKhC,OAHIc,KACAE,EAAWC,IAAoBH,GAAeA,EAAYG,GAAmB,MAE1ED,EAGX,QAASxB,GAAgBH,EAAa6B,GAElC,GAAI1V,GAAOC,KAGP0V,KACAC,IAEAjC,IACAiC,EAAkBnU,KAAK,GAAAoU,GAAA,WAAoBlC,EAAUmC,QAErDrC,GACAkC,EAAkBlU,KAAK,GAAAoU,GAAA,WAAoBpC,EAAUqC,OAEzD,IAMIC,GANAC,EAAW,GAAAC,GAAA,WACPN,EAAmBC,EAAmB,WACrB,cAAjB3C,EAAgC,WAAa,YAC5CA,IACLiD,IAGJ,IAAItJ,GAEA,IAAKmJ,EAAQ,EAAGA,EAAQlC,EAAY3S,OAAQ6U,IACxC,GAAInJ,IAAciH,EAAYkC,GAAOI,GAAI,CAuBrC,GAAIC,GAAO,WArBXF,EAAoBzU,MAAM0U,GAAItC,EAAYkC,GAAOI,GAAIE,SAAUL,IAI/D,IAAIM,GAA4B,QAA5BA,GAAsCC,GACtC5H,EAASpL,IAAI2P,EAAA,WAAOjB,2BAA4BqE,EAA2BtW,GACvEuW,EAAMtF,MACDyE,GACD/G,EAASjL,QAAQwP,EAAA,WAAOhB,qBAAsBjB,MAAO,oCAAsCsF,EAAMtF,SAGrG5C,EAAI,iCACJM,EAASjL,QAAQwP,EAAA,WAAOhB,qBAAsB9E,KAAMmJ,EAAMnJ,OAC1D6G,EAAiBJ,EAAYkC,GAAOlJ,WAK5C,OAFA8B,GAAS5L,GAAGmQ,EAAA,WAAOjB,2BAA4BqE,EAA2BtW,GAC1EuO,EAAgBiI,uBAAuBN,GACvC,UA0BA,IAAa,UAATE,EA1BJ,WAIP,IAAkBlS,SAAd0I,EAAyB,CAE9BA,EAAY,KACZmG,EAAmBtR,KAAKoS,EAGxB,KAAK,GAAIhT,GAAI,EAAGA,EAAIgT,EAAY3S,OAAQL,IACpCqV,EAAoBzU,MAAM0U,GAAItC,EAAYhT,GAAGsV,GAAIE,SAAUL,IAG/D,IAAIS,GACAH,EAA4B,QAA5BA,GAAsCC,GACtC5H,EAASpL,IAAI2P,EAAA,WAAOjB,2BAA4BqE,EAA2BtW,GACvEuW,EAAMtF,OACNrE,EAAY1I,OACZyK,EAASpL,IAAI2P,EAAA,WAAOzB,6BAA8BiF,EAAqB1W,GAElE0V,GACD/G,EAASjL,QAAQwP,EAAA,WAAOhB,qBAAsB9E,KAAM,KAAM6D,MAAO,oCAAsCsF,EAAMtF,UAGjHwF,EAAkBF,EAAMnJ,KACxBiB,EAAI,kCAAoCoI,EAAgB7J,UAAU4H,aAAe,+BACjFjG,EAAgByF,gBAAgByC,KAGpCC,EAAsB,QAAtBA,GAAgCH,GAGhC,GAFA5H,EAASpL,IAAI2P,EAAA,WAAOzB,6BAA8BiF,EAAqB1W,GACvE2O,EAASpL,IAAI2P,EAAA,WAAOjB,2BAA4BqE,EAA2BtW,GACtEuW,EAAMtF,MAYPrE,EAAY1I,OACPwR,GACD/G,EAASjL,QAAQwP,EAAA,WAAOhB,qBAAsB9E,KAAM,KAAM6D,MAAO,uCAAyCsF,EAAMtF,YAdtG,CACdrE,EAAY2B,EAAgBoI,eAC5BhI,EAASjL,QAAQwP,EAAA,WAAOhB,qBAAsB9E,KAAMqJ,GACpD,KAAK,GAAI5V,GAAI,EAAGA,EAAIkS,EAAmB7R,OAAQL,IAC3C,IAAKkV,EAAQ,EAAGA,EAAQhD,EAAmBlS,GAAGK,OAAQ6U,IAClD,GAAInJ,IAAcmG,EAAmBlS,GAAGkV,GAAOI,GAAI,CAC/ClC,EAAiBlB,EAAmBlS,GAAGkV,GAAOlJ,SAC9C,SAWpB8B,GAAS5L,GAAGmQ,EAAA,WAAOzB,6BAA8BiF,EAAqB1W,GACtE2O,EAAS5L,GAAGmQ,EAAA,WAAOjB,2BAA4BqE,EAA2BtW,GAC1EuO,EAAgBiI,uBAAuBN,OAGvCnD,GAAmBtR,KAAKoS,GAIhC,QAAS+C,GAAgCxJ,EAAM6D,GAC3CtC,EAASjL,QAAQwP,EAAA,WAAOf,0BAA2B/E,KAAMA,EAAM6D,MAAOA,IAG1E,QAASkE,GAAa/U,GAElB,GADAiO,EAAI,qBACAjO,EAAE6Q,MAEF,WADA5C,GAAIjO,EAAE6Q,MAKV,IAAI4F,GAAazW,EAAEgN,IACnBuB,GAASjL,QAAQwP,EAAA,WAAOtB,aAAcxE,KAAMyJ,GAC5C,IAAIC,GAAcD,EAAYC,YAAeD,EAAWC,YAAc,kBAClE5F,EAAU2F,EAAW3F,QACrB0D,EAAeiC,EAAWjC,aAC1BY,EAAWD,EAAY3I,GACvB6I,EAAkB7I,EAAU4H,aAC5BuC,EAAoB7I,EAAwB8I,iBAAiBpK,EAAW4I,EAAUsB,GAClFG,GAAcrC,aAAcA,EAAckC,YAAaA,EAG3D,KAAKC,EAGD,MAFA1I,GAAI,qEAAuEjO,EAAEgN,KAAK0J,YAAc,oBAAsBlC,EAAasC,oBACnIN,GAAgCK,EAKpC,IAAI/I,EAAwBiJ,WAAWvK,GAAY,CAC/C,GAAIwK,GAAYlJ,EAAwBmJ,8BAA8B7B,EAAUtE,EAChF,IAAIkG,EAIA,MAHA/I,GAAI,yDACJuI,EAAgCK,OAChC1I,GAAgB+I,iBAAiB1C,EAAcwC,GAMvD,GAAIG,GAAM,GAAIC,gBAGVC,EAAM,IACV,IAAIjC,EACA,GAAIA,EAASkC,UAAW,CACpB,GAAIA,GAAYlC,EAASkC,SACA,iBAAdA,IAAwC,KAAdA,EACjCD,EAAMC,EACsB,gBAAdA,IAA0BA,EAAU9T,eAAekT,KACjEW,EAAMC,EAAUZ,QAEbtB,GAASmC,OAA4B,KAAnBnC,EAASmC,QAClCF,EAAMjC,EAASmC,WAGnBF,GAAM7K,EAAUgL,gCAAgCzD,EAAA,WAAiB0D,YAAYjD,EAAa/H,WACrF4K,IACDA,EAAMrX,EAAEgN,KAAKuK,MAOrB,IAHAF,EAAMV,EAAkBe,wBAAwBL,EAAKvG,EAAS4F,IAGzDW,EAED,WADAb,GAAgCK,EAAW,wCAI/CM,GAAIQ,KAAKhB,EAAkBiB,cAAclB,GAAcW,GAAK,GAC5DF,EAAIU,aAAelB,EAAkBmB,gBAAgBzC,EAAiBqB,GACtES,EAAIY,OAAS,WACU,KAAflY,KAAKmY,QACLxB,EAAgCK,GAChC1I,EAAgB+I,iBAAiB1C,EACzBmC,EAAkBsB,kBAAkBpY,KAAKqY,SAAU7C,EAAiBqB,KAE5EF,EAAgCK,EACxB,QAAUxB,EAAkB,2BAA6BxV,KAAKsY,WAAa,MAAQtY,KAAKmY,OACxF,wCAA0CnY,KAAKuY,WAC/C,mBAAqBvY,KAAMqY,SAAYvB,EAAkB0B,iBAAiBxY,KAAKqY,SAAU7C,EAAiBqB,GAAe,UAGzIS,EAAImB,QAAU,WACV9B,EAAgCK,EAAW,QAAUxB,EAAkB,oCAAsCxV,KAAKsY,WAAa,MAAQtY,KAAKmY,OAAS,oBAAsBnY,KAAKuY,aAEpLjB,EAAIoB,QAAU,WACV/B,EAAgCK,EAAW,QAAUxB,EAAkB,kCAAoCxV,KAAKsY,WAAa,MAAQtY,KAAKmY,OAAS,oBAAsBnY,KAAKuY,YAIlL,IAAII,GAAgB,SAAUC,GAC1B,GAAIzN,EACJ,IAAIyN,EACA,IAAKzN,IAAOyN,GACJ,kBAAoBzN,EAAIe,gBACxBoL,EAAIuB,iBAAkB,GAE1BvB,EAAIwB,iBAAiB3N,EAAKyN,EAAQzN,IAI1CoK,IACAoD,EAAcpD,EAASwD,oBAE3BJ,EAAchM,EAAUqM,6BAA6B/H,IAGjDsE,GAAYA,EAASsD,kBACrBvB,EAAIuB,iBAAkB,GAG1BvB,EAAI2B,KAAKtM,EAAUuM,6BAA6BjI,IAGpD,QAASgE,GAAUqB,GAGf,GAFAlI,EAAI,kBAE2B,SAA3BkI,EAAMnL,IAAIgO,aAEV,WADA/K,GAAI,wEAA4EkI,EAAMnL,IAAIgO,aAM9F,IAAIC,GAAa9C,EAAMnL,IAAIyB,QACvByM,aAAYC,OAAOF,KACnBA,EAAaA,EAAWlM,QAG5BkB,EAAI,iBAAkBzM,OAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAW8W,IAErE,IAAIxF,GAAc3F,EAAwBsL,uBAAuBH,EACjE,OAA2B,KAAvBxF,EAAY3S,WACZmN,GAAI,+FAIR2F,GAAgBH,GAAa,GA1ejC,GAAI3F,GAA0B1C,EAAO0C,wBACjCK,EAAkB/C,EAAO+C,gBACzBG,EAAUlD,EAAOkD,QACjBC,EAAWnD,EAAOmD,SAClBN,EAAM7C,EAAO6C,IAEbpK,EAAQC,OACR2O,EAAU3O,OACV6O,EAAkB7O,OAClBuP,EAASvP,OACTyP,EAASzP,OACToR,EAAWpR,OACX8O,EAAW9O,OACX+O,EAAW/O,OACX0I,EAAS1I,MA6eb,OAdAD,IACIqK,WAAYA,EACZ2F,iBAAkBA,EAClBQ,eAAgBA,EAChBE,iBAAkBA,EAClBE,gBAAiBA,EACjBC,qBAAsBA,EACtBE,gBAAiBA,EACjBI,eAAgBA,EAChBC,kBAAmBA,EACnBvR,MAAOA,GAGX8O,IACO3O,EA/gBXE,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIoV,GAAsBrY,EARG,0BAUzB+S,EAAuBzR,EAAuB+W,GAE9CC,EAAsBtY,EAXP,kCAaf8R,EAAuBxQ,EAAuBgX,GAE9CC,EAAuBvY,EAdC,4BAgBxByU,EAAwBnT,EAAuBiX,GAE/CC,EAA8BxY,EAjBC,mCAmB/B6U,EAA+BvT,EAAuBkX,GAEtDvJ,EAAsBjP,EApBD,iCAsBrBkP,EAAuB5N,EAAuB2N,GAE9CwJ,EAAgBzY,EAvBG,oBAyBnB+R,EAAiBzQ,EAAuBmX,EAsf5ClH,GAAqBnO,sBAAwB,uBAuB7C/E,EAAQ,WAtBO6Q,EAAA,WAAahL,gBAAgBqN,GAuB5CjT,EAAOD,QAAUA,EAAQ,2NC5iBzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAQzF,QAASmX,KASL,QAAS1L,GAAU5C,GACVA,GAEDA,EAAO6C,MACPA,EAAM7C,EAAO6C,KAIrB,QAASC,KACLuE,IAEA,IAAIjG,EAGJA,IAAY,EAAAmN,EAAA,YAAkBhV,GAASa,cACvCiN,EAAWpR,KAAKmL,GAGhBA,GAAY,EAAAoN,EAAA,YAAmBjV,GAASa,cACxCiN,EAAWpR,KAAKmL,GAGhBA,GAAY,EAAAqN,EAAA,YAAkBlV,GAASa,cACvCiN,EAAWpR,KAAKmL,GAChBsN,EAAoBtN,EAaxB,QAASkG,KACL,MAAOD,GAcX,QAASsH,GAA2B3F,GAChC,IAAK,GAAI3T,GAAI,EAAGA,EAAIgS,EAAW3R,OAAQL,IACnC,GAAIgS,EAAWhS,GAAG2T,eAAiBA,EAC/B,MAAO3B,GAAWhS,EAG1B,OAAO,MAiBX,QAASsW,GAAWvK,GAChB,MAAQA,KAAcsN,EAa1B,QAAS3F,GAAe6F,EAAWC,GAC/B,GAAID,EAAUvM,aAAewM,EAAUxM,WAAY,CAI/C,IAAK,GAHDyM,GAAQ,GAAI/X,YAAW6X,GACvBG,EAAQ,GAAIhY,YAAW8X,GAElBG,EAAI,EAAGA,EAAIF,EAAMpZ,OAAQsZ,IAC9B,GAAIF,EAAME,KAAOD,EAAMC,GACnB,OAAO,CAGf,QAAO,EAEX,OAAO,EAqBX,QAAS1G,GAA4C2G,GACjD,GAAIxO,GAAIkK,EAAIJ,EAAO2E,EACf7G,IAEJ,IAAI4G,EACA,IAAK1E,EAAQ,EAAGA,EAAQlD,EAAW3R,SAAU6U,EAEzC,IADAI,EAAKtD,EAAWkD,GACX2E,EAAQ,EAAGA,EAAQD,EAAIvZ,SAAUwZ,EAElC,GADAzO,EAAKwO,EAAIC,GACLzO,EAAGC,YAAYC,gBAAkBgK,EAAGwE,YAAa,CAGjD,GAAI9N,GAAWsJ,EAAGyE,YAAY3O,EACxBY,IACFgH,EAAYpS,MACR0U,GAAItD,EAAWkD,GACflJ,SAAUA,IAOlC,MAAOgH,GAqBX,QAAS2F,GAAuB3M,GAC5B,GAAIkJ,GACAlC,KACAzH,EAAO+H,EAAA,WAAiBpH,cAAcF,EAE1C,KAAKkJ,EAAQ,EAAGA,EAAQlD,EAAW3R,SAAU6U,EACrClD,EAAWkD,GAAO/I,OAAQZ,IAC1ByH,EAAYpS,MACR0U,GAAItD,EAAWkD,GACflJ,SAAUT,EAAKyG,EAAWkD,GAAO/I,OAI7C,OAAO6G,GAoBX,QAASmD,GAAiBpK,EAAW4I,EAAUsB,GAI3C,GAAoB,oBAAhBA,GAAoD,6BAAfA,EACrC,MAAO,KAGX,IAAIC,GAAoB,IAWxB,OAVIvB,IAAYA,EAAS5R,eAAe,YACpCmT,GAAoB,EAAA8D,EAAA,YAAS9V,GAASa,cACJ,uBAA3BgH,EAAU4H,aACjBuC,GAAoB,EAAA+D,EAAA,YAAS/V,GAASa,cACJ,4BAA3BgH,EAAU4H,aACjBuC,GAAoB,EAAAgE,EAAA,YAAUhW,GAASa,cACL,oBAA3BgH,EAAU4H,eACjBuC,GAAoB,EAAAiE,EAAA,YAASjW,GAASa,eAGnCmR,EAcX,QAASM,GAA8B7B,EAAUtE,GAC7C,IACI,MAAOgJ,GAAkBe,+BAA+BzF,EAAUtE,GACpE,MAAOD,GAEL,MADA5C,GAAI,oDACG,MApPf,GAAItJ,GAAU9E,KAAK8E,QAEfd,EAAQC,OACRmK,EAAGnK,OACH2O,EAAU3O,OACVgW,EAAiBhW,MAgQrB,OAbAD,IACIqK,WAAYA,EACZ6I,WAAYA,EACZ5C,eAAgBA,EAChBzB,cAAeA,EACfqH,2BAA4BA,EAC5BrG,4CAA6CA,EAC7C0F,uBAAwBA,EACxBxC,iBAAkBA,EAClBK,8BAA+BA,EAC/BjJ,UAAWA,GAhRnBjK,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIoV,GAAsBrY,EARG,4BAUzB+S,EAAuBzR,EAAuB+W,GAE9CyB,EAA0B9Z,EAXA,iCAa1B6Y,EAA2BvX,EAAuBwY,GAElDC,EAA0B/Z,EAdA,iCAgB1B2Y,EAA2BrX,EAAuByY,GAElDC,EAA2Bha,EAjBA,kCAmB3B4Y,EAA4BtX,EAAuB0Y,GAEnDC,EAAqBja,EApBJ,4BAsBjByZ,EAAsBnY,EAAuB2Y,GAE7CC,EAAsBla,EAvBJ,6BAyBlB2Z,EAAuBrY,EAAuB4Y,GAE9CC,EAAqBna,EA1BJ,4BA4BjB0Z,EAAsBpY,EAAuB6Y,GAE7CC,EAAqBpa,EA7BJ,4BA+BjB4Z,EAAsBtY,EAAuB8Y,GAE7CnL,EAAsBjP,EAhCD,iCAkCrBkP,EAAuB5N,EAAuB2N,EA8OlDyJ,GAAwBtV,sBAAwB,0BAmChD/E,EAAQ,WAlCO6Q,EAAA,WAAa7L,oBAAoBqV,GAmChDpa,EAAOD,QAAUA,EAAQ,qUC3TzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAGzF,QAAS8Y,KAaL,QAASR,GAA+BS,EAAgBxK,GACpD,GAAIyK,GAAc,IAClB,IAAID,EAAgB,CAKhB,IAAK,GAFDE,GAAUC,KAAKC,MAAMla,OAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAW2O,KACpE6K,KACKlb,EAAI,EAAGA,EAAI+a,EAAQI,KAAK9a,OAAQL,IAAK,CAC1C,GAAIob,GAAaL,EAAQI,KAAKnb,GAC1Bqb,EAAWR,EAAgBtE,UAAUxT,eAAeqY,GAAeP,EAAetE,UAAU6E,GAAc,IAC9G,KAAKC,EACD,KAAM,IAAIpb,OAAM,wBAA0Bmb,EAAa,kBAG3DF,GAASta,KAAK,GAAA0a,GAAA,WAAYF,EAAYC,IAE1CP,EAAc,GAAAS,GAAA,WAAmBL,GAErC,MAAOJ,GAGX,QAASf,GAAY3O,GACjB,MAAOkI,GAAA,WAAiBkI,mCAAmCpQ,GAG/D,QAASgN,KACL,MAAO,MAGX,QAASE,GAA6BjI,GAClC,MAAO,IAAI3O,YAAW2O,GAG1B,QAAS0G,KACL,MAAO,MA7CX,GAAI3T,GAAQC,MA2DZ,OAXAD,IACI+I,KAAMA,EACN2N,YAAaA,EACbnG,aAAcA,EACdoG,YAAaA,EACb3B,6BAA8BA,EAC9BE,6BAA8BA,EAC9BvB,gCAAiCA,EACjCqD,+BAAgCA,GAjExC9W,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIiY,GAAelb,EARC,oBAUhB+a,EAAgBzZ,EAAuB4Z,GAEvCC,EAAsBnb,EAXC,2BAavBgb,EAAuB1Z,EAAuB6Z,GAE9C9C,EAAsBrY,EAdG,0BAgBzB+S,EAAuBzR,EAAuB+W,GAE9CpJ,EAAsBjP,EAjBD,iCAmBrBkP,EAAuB5N,EAAuB2N,GAjB5CrD,EAAO,uCACPwH,EAAe,kBACfmG,EAAc,YAAc3N,CAkElCyO,GAAkBjX,sBAAwB,oBAoB1C/E,EAAQ,WAnBO6Q,EAAA,WAAa7L,oBAAoBgX,GAoBhD/b,EAAOD,QAAUA,EAAQ,mJCxFzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAIzF,QAAS6Z,KAKL,QAASvD,GAA6B/H,GAClC,GAAIuL,GACAC,EACA7D,KACA8D,EAAS,GAAIC,WACbC,EAA8B,UAAnBC,EAA8B,GAAIC,aAAY7L,GAAW,GAAI3O,YAAW2O,EAEvFuL,GAAM7a,OAAOC,aAAa6D,MAAM,KAAMmX,GACtCH,EAASC,EAAOK,gBAAgBP,EAAK,kBAIrC,KAAK,GAFDQ,GAAiBP,EAAOQ,qBAAqB,QAC7CC,EAAkBT,EAAOQ,qBAAqB,SACzCrc,EAAI,EAAGA,EAAIoc,EAAe/b,OAAQL,IACvCgY,EAAQoE,EAAepc,GAAGuc,WAAW,GAAGC,WAAaF,EAAgBtc,GAAGuc,WAAW,GAAGC,SAS1F,OAJIxE,GAAQjV,eAAe,aACvBiV,EAAQ,gBAAkBA,EAAQyE,cAC3BzE,GAAQyE,SAEZzE,EAGX,QAASM,GAA6BjI,GAClC,GAAIuL,GACAC,EACAa,EAAiB,KACjBZ,EAAS,GAAIC,WACbC,EAA8B,UAAnBC,EAA8B,GAAIC,aAAY7L,GAAW,GAAI3O,YAAW2O,EAKvF,IAHAuL,EAAM7a,OAAOC,aAAa6D,MAAM,KAAMmX,GACtCH,EAASC,EAAOK,gBAAgBP,EAAK,mBAEjCC,EAAOQ,qBAAqB,aAAa,GAAI,CAC7C,GAAIM,GAAYd,EAAOQ,qBAAqB,aAAa,GAAGE,WAAW,GAAGC,SACtEG,KACAD,EAAiB1R,EAAA,WAAOnK,OAAO8b,IAGvC,MAAOD,GAGX,QAAS3F,GAAgC/K,GACrC,GAAIA,EAMA,IAAK,GALDO,GAAO,GAAIb,UAASM,GACpB4Q,EAAarQ,EAAKsQ,UAAU,GAAG,GAC/BrR,EAAS,EACTsQ,EAAS,GAAIC,WAER/b,EAAI,EAAO4c,EAAJ5c,EAAgBA,IAAK,CAEjC,GAAI8c,GAAavQ,EAAKsQ,UAAUrR,GAAQ,EACxCA,IAAU,CACV,IAAIuR,GAAexQ,EAAKsQ,UAAUrR,GAAQ,EAE1C,IADAA,GAAU,EACS,IAAfsR,EAAJ,CAKA,GAAIE,GAAahR,EAASF,MAAMN,EAAQA,EAASuR,GAC7CE,EAASlc,OAAOC,aAAa6D,MAAM,KAAM,GAAIqX,aAAYc,IACzDnB,EAASC,EAAOK,gBAAgBc,EAAQ,kBAG5C,IAAIpB,EAAOQ,qBAAqB,UAAU,GAAI,CAC1C,GAAIa,GAAQrB,EAAOQ,qBAAqB,UAAU,GAAGE,WAAW,GAAGC,SACnE,IAAIU,EACA,MAAOA,GAKf,GAAIrB,EAAOQ,qBAAqB,WAAW,GAAI,CAC3C,GAAIc,GAAStB,EAAOQ,qBAAqB,WAAW,GAAGE,WAAW,GAAGC,SACrE,IAAIW,EACA,MAAOA,QApBX3R,IAAUuR,EA0BtB,MAAO,MAGX,QAAShD,GAAY3N,GASjB,GAMIgR,GACAC,EACAC,EACAC,EACAC,EAVAC,EAAc,GAAI/b,aAAY,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,IACxEgc,EAAoB,GAAIhc,aAAY,IAAM,EAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,MAE9HgL,EAAa,EACbiR,EAA6B,IASjC,IAAI,QAAUvR,GACV,MAAOkH,GAAA,WAAiBkI,mCAAmCpP,EAG/D,IAAI,OAASA,GACTuR,EAA6B3S,EAAA,WAAOzJ,YAAY6K,EAAOwR,IAAIvR,YAE1D,CAAA,KAAI,YAAcD,IAInB,MAAO,KAHPuR,GAA6B3S,EAAA,WAAOzJ,YAAY6K,EAAOyR,SAASxR,QA6BpE,MAvBA+Q,GAAUO,EAA2Btd,OACrCgd,EAAW,EAAMI,EAAYpd,OAASqd,EAAkBrd,OAAS,EAAM+c,EAEvEE,EAAgB,GAAI7E,aAAY4E,GAEhCE,EAAU,GAAI7b,YAAW4b,GACzBE,EAAW,GAAI9R,UAAS4R,GAExBE,EAASM,UAAUpR,EAAY2Q,GAC/B3Q,GAAc,EAEd6Q,EAAQQ,IAAIN,EAAa/Q,GACzBA,GAAc+Q,EAAYpd,OAE1Bkd,EAAQQ,IAAIL,EAAmBhR,GAC/BA,GAAcgR,EAAkBrd,OAEhCmd,EAASM,UAAUpR,EAAY0Q,GAC/B1Q,GAAc,EAEd6Q,EAAQQ,IAAIJ,EAA4BjR,GACxCA,GAAc0Q,EAEPG,EAAQjR,OAWnB,QAAS0R,GAA0BC,GAC/B,GAAe,SAAXA,GAAgC,UAAXA,EACrB,KAAM,IAAAC,GAAA,WAAU,wCAA0CD,EAE9DhC,GAAgBgC,EApKpB,GAAI7a,GAAQC,OACR4Y,EAAgB,OAiLpB,OAXA7Y,IACI+I,KAAMA,EACN2N,YAAaA,EACbnG,aAAcA,EACdoG,YAAaA,EACb3B,6BAA8BA,EAC9BE,6BAA8BA,EAC9BvB,gCAAiCA,EACjCiH,0BAA2BA,GAzLnC1a,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIoV,GAAsBrY,EARG,0BAUzB+S,EAAuBzR,EAAuB+W,GAE9CuF,EAAa5d,EAXC,qBAad2d,EAAcrc,EAAuBsc,GAErC3O,EAAsBjP,EAbD,iCAerBkP,EAAuB5N,EAAuB2N,GAE9CzE,EAAqBxK,EAhBN,mCAkBfyK,EAAsBnJ,EAAuBkJ,GAhB3CoB,EAAO,uCACPwH,EAAe,0BACfmG,EAAc,YAAc3N,CAyLlCwP,GAAmBhY,sBAAwB,qBAW3C/E,EAAQ,WAVO6Q,EAAA,WAAa7L,oBAAoB+X,GAWhD9c,EAAOD,QAAUA,EAAQ,2JC5MzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GACzF,QAASsc,KAIL,QAASrE,GAAY3O,GACjB,MAAOkI,GAAA,WAAiBkI,mCAAmCpQ,GAG/D,QAASgN,KACL,MAAO,MAGX,QAASE,GAA6BjI,GAClC,MAAO,IAAI3O,YAAW2O,GAG1B,QAAS0G,KACL,MAAO,MAfX,GAAI3T,GAAQC,MA4BZ,OAVAD,IACI+I,KAAMA,EACN2N,YAAaA,EACbnG,aAAcA,EACdoG,YAAaA,EACb3B,6BAA8BA,EAC9BE,6BAA8BA,EAC9BvB,gCAAiCA,GAhCzCzT,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIoV,GAAsBrY,EARG,0BAUzB+S,EAAuBzR,EAAuB+W,GAE9CpJ,EAAsBjP,EAXD,iCAarBkP,EAAuB5N,EAAuB2N,GAX5CrD,EAAO,uCACPwH,EAAe,qBACfmG,EAAc,YAAc3N,CAmClCiS,GAAkBza,sBAAwB,oBAc1C/E,EAAQ,WAbO6Q,EAAA,WAAa7L,oBAAoBwa,GAchDvf,EAAOD,QAAUA,EAAQ,gGCtDzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAIzF,QAASuc,GAAoB1T,GAoCzB,QAASoH,KACL9D,EAAe,KACflC,EAAY,KACZuS,KACAC,KACAlR,GAA0B,EAAAC,EAAA,YAAwBpJ,GAASa,cAC3DyZ,GAAa,EAAAC,EAAA,YAAava,GAASa,cACnC2Z,EAAeC,IAGnB,QAAS1b,KACDgL,GACA2Q,GAEJ,KAAK,GAAI5e,GAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjCgU,EAAgBuK,EAASve,GAE7B8N,GAASjL,QAAQwP,EAAA,WAAOV,mBAG5B,QAASmE,KACL,MAAO/J,GAGX,QAAS0H,KAEL,IAAK,GADDtI,MACKnL,EAAI,EAAGA,EAAIse,EAAgBje,OAAQL,IACxCmL,EAAOvK,KAAK0d,EAAgBte,GAAGgM,SAEnC,KAAK,GAAIhM,GAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjCmL,EAAOvK,KAAK2d,EAASve,GAAGgM,SAE5B,OAAOb,GAGX,QAASwK,GAAuBkJ,GAC5B,GAAIC,GAAK7Q,CACJ6Q,KACDA,EAAKC,SAASC,cAAc,SAMhC,KAAK,GADDC,IAAQ,EACH/J,EAAQ,EAAGA,EAAQ2J,EAAiBxe,OAAQ6U,IAQjD,IAAK,GAPDvB,GAAekL,EAAiB3J,GAAOI,GAAG3B,aAC1C6B,EAAUqJ,EAAiB3J,GAAOM,QAClC0J,EAAiB,KACjBC,EAAiB,KAIZC,EAAY,EAAGA,EAAY5J,EAAQnV,OAAQ+e,IAAa,CAE7D,GAAIC,GAAS7J,EAAQ4J,GAAWrK,iBAEhC,IAAIsK,GAA4B,IAAlBA,EAAOhf,OAAc,CAC/B8e,IACA,KAAK,GAAIG,GAAW,EAAGA,EAAWD,EAAOhf,OAAQif,IACsB,KAA/DR,EAAGS,YAAYF,EAAOC,GAAUE,YAAa7L,IAC7CwL,EAAeve,KAAKye,EAAOC;CAOvC,MAAMJ,IAAmBC,GACpBD,GAA4C,IAA1BA,EAAe7e,QACjC8e,GAA4C,IAA1BA,EAAe9e,QAFtC,CAOA4e,GAAQ,CACR,IAAI9J,GAAW,GAAAC,GAAA,WAA2B8J,EAAgBC,GACtD7J,EAAKjI,EAAwBiM,2BAA2B3F,EAC5D7F,GAASjL,QAAQwP,EAAA,WAAOjB,4BAA8B7E,KAAM,GAAAkT,GAAA,WAAoBnK,EAAIH,IACpF,QAGH8J,GACDnR,EAASjL,QAAQwP,EAAA,WAAOjB,4BAA6BhB,MAAO,uFAIpE,QAAS+C,GAAgByC,GACrB7J,EAAY6J,EAAgB7J,UAC5B+B,EAASjL,QAAQwP,EAAA,WAAOzB,8BAG5B,QAASuD,GAAgBuL,GACjBzR,IAAiByR,IAKjBzR,GACA2Q,IAGJ3Q,EAAeyR,EAGXzR,IACAA,EAAa0R,iBAAiB/Q,EAAIkB,SAAU4O,GAC5CzQ,EAAa0R,iBAAiB/Q,EAAIiB,QAAS6O,GAC3CzQ,EAAa0R,iBAAiB/Q,EAAIoB,WAAY0O,GAC9CzQ,EAAa0R,iBAAiB/Q,EAAImB,SAAU2O,GAC5C5Q,EAASjL,QAAQwP,EAAA,WAAOT,0BAIhC,QAASwB,GAAiBpH,GAEtB,IAAKD,EACD,KAAM,IAAI9L,OAAM,+DAIpB,IAAI2f,GAA2C,IAApBrB,EAASle,OAAc,CAE9C,GAAIwf,IACAhM,UAAW,KACX7H,SAAUA,EACVqK,aAAc,WACV,MAAOjX,MAAKyU,WAGhBiM,kBAAmB,WACf,MAAOC,MAGXC,eAAgB,WACZ,MAAO,aAQf,OALA1B,GAAgB1d,KAAKif,GAGrB5R,EAAaW,EAAIc,oBAAoB3D,EAAU4H,aAAc,GAAIjS,YAAWsK,IAErE6T,EAGP,KAAM,IAAI5f,OAAM,kCAKxB,QAASwW,GAAiB1C,EAAc1D,GACpC,GAAIwD,GAAYE,EAAaF,SAC7B,IAAKxG,EAAwBiJ,WAAWvK,GAMpC,IAAK,GAAI/L,GAAI,EAAGA,EAAIqQ,EAAQ6K,SAAS7a,OAAQL,IACzCiO,EAAaW,EAAIe,QAAQ5D,EAAU4H,aAC/BtD,EAAQ6K,SAASlb,GAAGuK,IAAK8F,EAAQ6K,SAASlb,GAAGigB,MAAOpM,OAN5D5F,GAAaW,EAAIe,QAAQ5D,EAAU4H,aAC/B,GAAIjS,YAAW2O,GAAU0D,EAAa/H,SAAU6H,GAU5D,QAASG,GAAgBD,GAErB9F,EAAaW,EAAIgB,kBAAkB7D,EAAU4H,aAAcI,EAAaF,WAG5E,QAASI,MACT,QAASL,MACT,QAASE,MAET,QAAS6K,KACL,OACIuB,YAAa,SAAUxK,GACnB,GAAI3B,GAAe,IACnB,QAAQ2B,EAAMvT,MAEV,IAAKyM,GAAIiB,QACL,GAAI7D,GAAWyM,YAAYC,OAAOhD,EAAM1J,UAAY0J,EAAM1J,SAASM,OAASoJ,EAAM1J,QAClF8B,GAASjL,QAAQwP,EAAA,WAAOd,UAAWhH,IAAK,GAAA4V,GAAA,WAAYnU,EAAU,SAC9D,MAAM,KAEL4C,GAAIkB,SAML,GALAiE,EAAeqM,EAAgB7B,EAAU7I,EAAM2K,WAC1CtM,IACDA,EAAeqM,EAAgB9B,EAAiB5I,EAAM2K,YAGtDtM,EAAc,CACd,GAAI6H,GAAM,EACV,QAAQlG,EAAM4K,UAAUpgB,MACpB,IAAK,GACD0b,GAAO,8HACP,MAAM,KACL,GACDA,GAAO,yEACP,MAAM,KACL,GACDA,GAAO,oGACP,MAAM,KACL,GACDA,GAAO,gIACP,MAAM,KACL,GACDA,GAAO,kGACP,MAAM,KACL,GACDA,GAAO,mJAGfA,GAAO,mBAAqBlG,EAAM6K,WAElCzS,EAASjL,QAAQwP,EAAA,WAAOvB,WAAYvE,KAAM,GAAAiU,GAAA,WAAazM,EAAc6H,SAErEpO,GAAI,uCAER,MAAM,KAELoB,GAAImB,SACLgE,EAAeqM,EAAgB7B,EAAU7I,EAAM2K,WAC1CtM,IACDA,EAAeqM,EAAgB9B,EAAiB5I,EAAM2K,YAGtDtM,GACAvG,EAAI,mBACJM,EAASjL,QAAQwP,EAAA,WAAOxB,WAAYtE,KAAMwH,KAE1CvG,EAAI,uCAER,MAAM,KAELoB,GAAIoB,WA6BL,GAzBA4P,EAA2C,OAArBlK,EAAO2K,WAA4Chd,SAApBqS,EAAM2K,UAGvDT,GAGA7L,EAAeqM,EAAgB7B,EAAU7I,EAAM2K,YAC1CtM,GAAgBuK,EAAgBje,OAAS,IAI1C0T,EAAeuK,EAAgBmC,QAC/BlC,EAAS3d,KAAKmT,GACdA,EAAaF,UAAY6B,EAAM2K,YAE5B/B,EAAgBje,OAAS,IAEhC0T,EAAeuK,EAAgBmC,QAC/BlC,EAAS3d,KAAKmT,GAEiB,IAA3BuK,EAAgBje,QAChBme,EAAWkC,qBAAqB,0HAIpC3M,EAAc,CACd,GAAI1D,GAAUoI,YAAYC,OAAOhD,EAAMrF,SAAWqF,EAAMrF,QAAQ/D,OAASoJ,EAAMrF,OAK/E0D,GAAaiC,WAAa3F,EAC1BvC,EAASjL,QAAQwP,EAAA,WAAO1B,sBAAuBpE,KAAM,GAAAoU,GAAA,WAAe5M,EAAc1D,EAASqF,EAAMkL,kBAGjGpT,GAAI,6CAiB5B,QAAS4S,GAAgBS,EAAchN,GAEnC,GAAKA,GAAcgN,EAEZ,CAEH,IAAK,GADDC,GAAMD,EAAaxgB,OACdL,EAAI,EAAO8gB,EAAJ9gB,EAASA,IACrB,GAAI6gB,EAAa7gB,GAAG6T,WAAaA,EAC7B,MAAOgN,GAAa7gB,EAG5B,OAAO,MARP,MAAO,MAYf,QAAS4e,KACL3Q,EAAa8S,oBAAoBnS,EAAIkB,SAAU4O,GAC/CzQ,EAAa8S,oBAAoBnS,EAAIiB,QAAS6O,GAC9CzQ,EAAa8S,oBAAoBnS,EAAIoB,WAAY0O,GACjDzQ,EAAa8S,oBAAoBnS,EAAImB,SAAU2O,GAxVnD,GAAIxa,GAAU9E,KAAK8E,QACf4J,EAAWnD,EAAOmD,SAClBN,EAAM7C,EAAO6C,IACboB,EAAMjE,EAAOiE,IAEbxL,EAAQC,OACR4K,EAAY5K,OACZ0I,EAAS1I,OACTgK,EAAuBhK,OACvBmb,EAAUnb,OAQVib,EAAejb,OAIfkb,EAAQlb,OAMRuc,EAAmBvc,OAKnBqb,EAAYrb,MA4UhB,OAjBAD,IACIqQ,eAAgBA,EAChBkC,uBAAwBA,EACxBG,aAAcA,EACd3C,gBAAiBA,EACjBgB,gBAAiBA,EACjBf,iBAAkBA,EAClBqD,iBAAkBA,EAClBzC,gBAAiBA,EACjBC,qBAAsBA,EACtBL,eAAgBA,EAChBE,iBAAkBA,EAClB7Q,MAAOA,GAGX8O,IAEO3O,EAtXXE,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAI0L,GAAwC3O,EARR,6CAUhC+M,EAAyCzL,EAAuBqN,GAEhE8R,EAAezgB,EAXC,oBAahB4f,EAAgBte,EAAuBmf,GAEvCC,EAAgB1gB,EAdC,qBAgBjBigB,EAAiB3e,EAAuBof,GAExCC,EAAkB3gB,EAjBC,uBAmBnBogB,EAAmB9e,EAAuBqf,GAE1CnI,EAA8BxY,EApBC,mCAsB/B6U,EAA+BvT,EAAuBkX,GAEtDoI,EAAuB5gB,EAvBC,4BAyBxBkf,EAAwB5d,EAAuBsf,GAE/CtI,EAAsBtY,EA1BP,kCA4Bf8R,EAAuBxQ,EAAuBgX,GAE9CuI,EAAuB7gB,EA7BF,+BA+BrBke,EAAwB5c,EAAuBuf,GAE/C5R,EAAsBjP,EAhCD,iCAkCrBkP,EAAuB5N,EAAuB2N,EAiVlD6O,GAAoB1a,sBAAwB,sBA6B5C/E,EAAQ,WA5BO6Q,EAAA,WAAahL,gBAAgB4Z,GA6B5Cxf,EAAOD,QAAUA,EAAQ,iUCzZzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAEzF,QAASuf,GAA0B1W,GAc/B,QAASoH,KACLhG,EAAY,KACZkC,EAAe,KACfI,EAAY,KACZkQ,KACAlR,GAA0B,EAAAC,EAAA,YAAwBpJ,GAASa,cAC3D2Z,EAAeC,IAGnB,QAAS1b,KACL,GACIqe,GADAC,EAAchD,EAASle,MAG3B,IAAoB,IAAhBkhB,EAeA,IAAK,GAbD9U,GAAO,SAAU6U,GACjBE,EAAcF,GACU,IAApB/C,EAASle,SACL4N,GACAA,EAAa8S,oBAAoB,YAAarC,GAC9CzQ,EAAagC,aAAa,MAAMwR,KAAK,WACjC3T,EAASjL,QAAQwP,EAAA,WAAOV,sBAG5B7D,EAASjL,QAAQwP,EAAA,WAAOV,qBAI3B3R,EAAI,EAAOuhB,EAAJvhB,EAAiBA,IAC7BshB,EAAU/C,EAASve,GACnB,SAAWL,GAEP2hB,EAAQA,QAAQI,OAAOD,KAAK,WACxBhV,EAAK9M,KAITgiB,EAAwBL,GAAQ,SAAO,WACnC7U,EAAK9M,MAGV2hB,OAGPxT,GAASjL,QAAQwP,EAAA,WAAOV,mBAIhC,QAASmE,KACL,MAAO/J,GAGX,QAAS0H,KAEL,IAAK,GADDtI,MACKnL,EAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjCmL,EAAOvK,KAAK2d,EAASve,GAAGgM,SAE5B,OAAOb,GAGX,QAASwK,GAAuBkJ,GAC5B+C,EAA+B/C,EAAkB,GAGrD,QAAS1L,GAAgByC,GACrBA,EAAgBiM,KAAKC,kBAAkBL,KAAK,SAAUM,GAClDhW,EAAY6J,EAAgB7J,UAC5BsC,EAAY0T,EACR9T,GACAA,EAAagC,aAAa5B,GAE9BP,EAASjL,QAAQwP,EAAA,WAAOzB,gCAE1B,SAAO,WACL9C,EAASjL,QAAQwP,EAAA,WAAOzB,8BAA+BR,MAAO,gCAAkCwF,EAAgB7J,UAAU4H,aAAe,4CAIjJ,QAASQ,GAAgBuL,GACjBzR,IAAiByR,IAIjBzR,GACAA,EAAa8S,oBAAoB,YAAarC,GAIlDzQ,EAAeyR,EAGXzR,IACAA,EAAa0R,iBAAiB,YAAajB,GACvCrQ,GACAJ,EAAagC,aAAa5B,KAKtC,QAAS4F,GAAqBC,GAC1B,IAAKnI,IAAcsC,EACf,KAAM,IAAIpO,OAAM,sEAEpBoO,GAAU4F,qBAAqBC,GAAmBuN,KAAK,WACnDjU,EAAI,yDACJM,EAASjL,QAAQwP,EAAA,WAAOX,8BAC1B,SAAO,SAAUtB,GACftC,EAASjL,QAAQwP,EAAA,WAAOX,4BAA6BtB,MAAO,wCAA0CA,EAAMrM,SAIpH,QAASqP,GAAiBpH,EAAUoG,GAEhC,IAAKrG,IAAcsC,EACf,KAAM,IAAIpO,OAAM,+DAGpB,IAAIqhB,GAAUjT,EAAU2T,cAAc5P,GAClC2B,EAAekO,EAAmBX,EAAStV,EAAUoG,EAGzDkP,GAAQY,gBAAgB,OAAQlW,GAAUyV,KAAK,WAC3CjU,EAAI,sCAAwCuG,EAAasC,gBACzDvI,EAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAMwH,MACtD,SAAO,SAAU3D,GAEfoR,EAAczN,GACdjG,EAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAM,KAAM6D,MAAO,mCAAqCA,EAAMrM,SAIpH,QAAS0S,GAAiB1C,EAAc1D,GAEpC,GAAIiR,GAAUvN,EAAauN,OAGvBjU,GAAwBiJ,WAAWvK,KACnCsE,EAAUA,EAAQ8R,SAEtBb,EAAQc,OAAO/R,GAAQ,SAAO,SAAUD,GACpCtC,EAASjL,QAAQwP,EAAA,WAAOvB,WAAYvE,KAAM,GAAAiU,GAAA,WAAazM,EAAc,mCAAqC3D,EAAMrM,UAIxH,QAAS6P,GAAeC,GACpB,IAAK9H,IAAcsC,EACf,KAAM,IAAIpO,OAAM,6DAGpB,IAAIqhB,GAAUjT,EAAU2T,eAGxBV,GAAQe,KAAKxO,GAAW4N,KAAK,SAAUa,GACnC,GAAIA,EAAS,CACT,GAAIvO,GAAekO,EAAmBX,EACtC9T,GAAI,sCAAwCuG,EAAasC,gBACzDvI,EAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAMwH,QAEpDjG,GAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAM,KAAM6D,MAAO,+CAAiDyD,EAAY,QAEpI,SAAO,SAAUzD,GACftC,EAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAM,KAAM6D,MAAO,2BAA6ByD,EAAY,MAAQzD,EAAMrM,SAIhI,QAAS+P,GAAiBC,GACtB,GAAIuN,GAAUvN,EAAauN,OAE3BA,GAAQiB,SAASd,KAAK,WAClBjU,EAAI,sCAAwCuG,EAAasC,gBACzDvI,EAASjL,QAAQwP,EAAA,WAAOnB,qBAAsB3E,KAAMwH,EAAasC,kBAClE,SAAUjG,GACTtC,EAASjL,QAAQwP,EAAA,WAAOnB,qBAAsB3E,KAAM,KAAM6D,MAAO,2BAA6B2D,EAAasC,eAAiB,MAAQjG,EAAMrM,SAKlJ,QAASiQ,GAAgBD,GAErB4N,EAAwB5N,GAAa,SAAO,SAAU3D,GAClDoR,EAAczN,GACdjG,EAASjL,QAAQwP,EAAA,WAAOrB,oBAAqBzE,KAAM,KAAM6D,MAAO,0BAA4B2D,EAAasC,eAAiB,KAAOjG,EAAMrM,SAI/I,QAAS6d,GAA+B/C,EAAkBlc,IACtD,SAAW3C,GACP,GAAI+L,GAAY8S,EAAiB7e,GAAGsV,GAChCE,EAAUqJ,EAAiB7e,GAAGwV,OAClClH,WAAUC,4BAA4BxC,EAAU4H,aAAc6B,GAASiM,KAAK,SAAUe,GAGlF,GAAIC,GAAkE,kBAA1CD,GAAqBE,iBACzCF,EAAqBE,mBAAqB,KAC9C9M,EAAkB,GAAA6J,GAAA,WAAoB1T,EAAW0W,EACrD7M,GAAgBiM,KAAOW,EACvB1U,EAASjL,QAAQwP,EAAA,WAAOjB,4BAA6B7E,KAAMqJ,MAE7D,SAAO,aACC5V,EAAI6e,EAAiBxe,OACvBuhB,EAA+B/C,EAAkB7e,GAEjD8N,EAASjL,QAAQwP,EAAA,WAAOjB,4BAA6BhB,MAAO,iCAGrEzN,GAGP,QAASgf,GAAwB5N,GAC7B,GAAIuN,GAAUvN,EAAauN,OAO3B,OAJAA,GAAQP,oBAAoB,oBAAqBhN,GACjDuN,EAAQP,oBAAoB,UAAWhN,GAGhCuN,EAAQ/Q,QAMnB,QAASoO,KACL,OACIuB,YAAa,SAAUxK,GACnB,OAAQA,EAAMvT,MAEV,IAAK,YACD,GAAIuT,EAAM1J,SAAU,CAChB,GAAIA,GAAWyM,YAAYC,OAAOhD,EAAM1J,UAAY0J,EAAM1J,SAASM,OAASoJ,EAAM1J,QAClF8B,GAASjL,QAAQwP,EAAA,WAAOd,UAAWhH,IAAK,GAAA4V,GAAA,WAAYnU,EAAU0J,EAAM6C,oBAQ5F,QAASiJ,GAAcmB,GAEnB,IAAK,GAAI3iB,GAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjC,GAAIue,EAASve,KAAO2iB,EAAO,CACvBpE,EAAS3b,OAAO5C,EAAE,EAClB,QAOZ,QAASiiB,GAAmBX,EAAStV,EAAUoG,GAE3C,GAAIuQ,IACArB,QAASA,EACTtV,SAAUA,EAKVkU,YAAa,SAAUxK,GACnB,OAAQA,EAAMvT,MACV,IAAK,oBACD2L,EAASjL,QAAQwP,EAAA,WAAOlB,sBAAuB5E,KAAMnN,MACrD,MAAM,KAEL,UACD,GAAIiR,GAAUoI,YAAYC,OAAOhD,EAAMrF,SAAWqF,EAAMrF,QAAQ/D,OAASoJ,EAAMrF,OAC/EvC,GAASjL,QAAQwP,EAAA,WAAO1B,sBAAuBpE,KAAM,GAAAoU,GAAA,WAAevhB,KAAMiR,EAAShN,OAAWqS,EAAMO,iBAKhHI,aAAc,WACV,MAAOiL,GAAQjB,WAGnBP,kBAAmB,WACf,MAAOwB,GAAQsB,YAGnBC,eAAgB,WACZ,MAAOvB,GAAQwB,aAGnB9C,eAAgB,WACZ,MAAO5N,IAkBf,OAbAkP,GAAQ3B,iBAAiB,oBAAqBgD,GAC9CrB,EAAQ3B,iBAAiB,UAAWgD,GAGpCrB,EAAQI,OAAOD,KAAK,WAChBD,EAAcmB,GACdnV,EAAI,qCAAuCmV,EAAMtM,gBACjDvI,EAASjL,QAAQwP,EAAA,WAAOrB,oBAAqBzE,KAAMoW,EAAMtM,mBAI7DkI,EAAS3d,KAAK+hB,GAEPA,EA3TX,GAIIvf,GACA2I,EACAkC,EACAI,EACAkQ,EACAG,EACArR,EAVAnJ,EAAU9E,KAAK8E,QACf4J,EAAWnD,EAAOmD,SAClBN,EAAM7C,EAAO6C,GA6UjB,OAjBApK,IACIqQ,eAAgBA,EAChBkC,uBAAwBA,EACxBG,aAAcA,EACd3C,gBAAiBA,EACjBgB,gBAAiBA,EACjBF,qBAAsBA,EACtBb,iBAAkBA,EAClBqD,iBAAkBA,EAClB7C,eAAgBA,EAChBE,iBAAkBA,EAClBE,gBAAiBA,EACjB/Q,MAAOA,GAGX8O,IAEO3O,EAvVXE,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAI0L,GAAwC3O,EARR,6CAUhC+M,EAAyCzL,EAAuBqN,GAEhE8R,EAAezgB,EAXC,oBAahB4f,EAAgBte,EAAuBmf,GAEvCC,EAAgB1gB,EAdC,qBAgBjBigB,EAAiB3e,EAAuBof,GAExCC,EAAkB3gB,EAjBC,uBAmBnBogB,EAAmB9e,EAAuBqf,GAE1CC,EAAuB5gB,EApBC,4BAsBxBkf,EAAwB5d,EAAuBsf,GAE/CtI,EAAsBtY,EAvBP,kCAyBf8R,EAAuBxQ,EAAuBgX,GAE9CrJ,EAAsBjP,EA1BD,iCA4BrBkP,EAAuB5N,EAAuB2N,EA0TlD6R,GAA0B1d,sBAAwB,4BAiBlD/E,EAAQ,WAhBO6Q,EAAA,WAAahL,gBAAgB4c,GAiB5CxiB,EAAOD,QAAUA,EAAQ,2PC7WzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAGzF,QAASihB,GAAyBpY,GAiB9B,QAASoH,KACL9D,EAAe,KACflC,EAAY,KACZsC,EAAY,KACZuH,EAAkB,KAClB2I,KACAlR,GAA0B,EAAAC,EAAA,YAAwBpJ,GAASa,cAC3D2Z,EAAeC,IAGnB,QAAS1b,KACL,IACI,IAAK,GAAIjD,GAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjCgU,EAAgBuK,EAASve,GAEzBiO,IACAA,EAAa8S,oBAAoBnS,EAAIiB,QAAS6O,GAElD5Q,EAASjL,QAAQwP,EAAA,WAAOV,mBAC1B,MAAOvB,GACLtC,EAASjL,QAAQwP,EAAA,WAAOV,mBAAoBvB,MAAO,qDAAuDA,EAAMC,WAIxH,QAASyF,KACL,MAAO/J,GAGX,QAAS0H,KAEL,IAAK,GADDtI,MACKnL,EAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjCmL,EAAOvK,KAAK2d,EAASve,GAAGgM,SAE5B,OAAOb,GAGX,QAASwK,GAAuBkJ,GAK5B,IAAK,GADDI,IAAQ,EACH/J,EAAQ,EAAGA,EAAQ2J,EAAiBxe,OAAQ6U,IAQjD,IAAK,GAPDvB,GAAekL,EAAiB3J,GAAOI,GAAG3B,aAC1C6B,EAAUqJ,EAAiB3J,GAAOM,QAClC0J,EAAiB,KACjBC,EAAiB,KAIZC,EAAY,EAAGA,EAAY5J,EAAQnV,OAAQ+e,IAAa,CAC7D,GAAI4D,GAASxN,EAAQ4J,GAAWtK,kBAC5BuK,EAAS7J,EAAQ4J,GAAWrK,iBAGhC,IAAIiO,GAA4B,IAAlBA,EAAO3iB,OAAc,CAC/B6e,IACA,KAAK,GAAI+D,GAAW,EAAGA,EAAWD,EAAO3iB,OAAQ4iB,IACzChkB,OAAO2P,EAAIsB,WAAWgT,gBAAgBvP,EAAcqP,EAAOC,GAAUzD,cACrEN,EAAete,KAAKoiB,EAAOC,IAMvC,GAAI5D,GAA4B,IAAlBA,EAAOhf,OAAc,CAC/B8e,IACA,KAAK,GAAIG,GAAW,EAAGA,EAAWD,EAAOhf,OAAQif,IACzCrgB,OAAO2P,EAAIsB,WAAWgT,gBAAgBvP,EAAc0L,EAAOC,GAAUE,cACrEL,EAAeve,KAAKye,EAAOC,IAOvC,MAAMJ,IAAmBC,GACpBD,GAA4C,IAA1BA,EAAe7e,QACjC8e,GAA4C,IAA1BA,EAAe9e,QAFtC,CAOA4e,GAAQ,CACR,IAAI9J,GAAW,GAAAC,GAAA,WAA2B8J,EAAgBC,GACtD7J,EAAKjI,EAAwBiM,2BAA2B3F,EAC5D7F,GAASjL,QAAQwP,EAAA,WAAOjB,4BAA6B7E,KAAM,GAAAkT,GAAA,WAAoBnK,EAAIH,IACnF,QAGH8J,GACDnR,EAASjL,QAAQwP,EAAA,WAAOjB,4BAA6BhB,MAAO,uFAIpE,QAAS+C,GAAgBgQ,GACrB,IACI9U,EAAY8U,EAAS9U,UAAY,GAAIpP,QAAO2P,EAAIsB,WAAWiT,EAASpX,UAAU4H,cAC9E5H,EAAYoX,EAASpX,UACrB6J,EAAkBuN,EACdlV,GACAgC,IAEJnC,EAASjL,QAAQwP,EAAA,WAAOzB,8BAC1B,MAAOR,GACLtC,EAASjL,QAAQwP,EAAA,WAAOzB,8BAA+BR,MAAO,gCAAkCrE,EAAU4H,aAAe,2CAIjI,QAASQ,GAAgBuL,GACjBzR,IAAiByR,IAIjBzR,GACAA,EAAa8S,oBAAoBnS,EAAIiB,QAAS6O,GAGlDzQ,EAAeyR,EAGXzR,IACAA,EAAa0R,iBAAiB/Q,EAAIiB,QAAS6O,GACvCrQ,GACA4B,MAKZ,QAASmD,GAAiBpH,GAEtB,IAAKD,IAAcsC,IAAcuH,EAC7B,KAAM,IAAI3V,OAAM,+DAOpB,IAAI8N,GAAe,IAQnB,IAN0D,OAAtD6H,EAAgBwN,gBAAgBrO,mBAA8Ba,EAAgBwN,gBAAgBrO,kBAAkB1U,OAAS,IAC3H0N,EAAe6H,EAAgBwN,gBAAgBrO,kBAAkB,IAE9C,OAAjBhH,GAA+E,OAAtD6H,EAAgBwN,gBAAgBtO,mBAA8Bc,EAAgBwN,gBAAgBtO,kBAAkBzU,OAAS,IACpJ0N,EAAe6H,EAAgBwN,gBAAgBtO,kBAAkB,IAE9C,OAAjB/G,EACF,KAAM,IAAI9N,OAAM,qDAElB,IAAIuf,GAAczR,EAAayR,YAC3B8B,EAAUjT,EAAU2T,cAAcxC,EAAa,GAAI9d,YAAWsK,IAC9D+H,EAAekO,EAAmBX,EAAStV,EAG/CsV,GAAQ3B,iBAAiB/Q,EAAIwB,MAAO2D,GACpCuN,EAAQ3B,iBAAiB/Q,EAAIyB,QAAS0D,GACtCuN,EAAQ3B,iBAAiB/Q,EAAI0B,MAAOyD,GACpCuN,EAAQ3B,iBAAiB/Q,EAAI2B,MAAOwD,GAGpCwK,EAAS3d,KAAKmT,GACdvG,EAAI,sCAAwCuG,EAAasC,gBACzDvI,EAASjL,QAAQwP,EAAA,WAAOpB,qBAAsB1E,KAAMwH,IAGxD,QAAS0C,GAAiB1C,EAAc1D,GAEpC,GAAIiR,GAAUvN,EAAauN,OAEtBjU,GAAwBiJ,WAAWvK,GAKpCuV,EAAQc,OAAO,GAAI1gB,YAAW2O,EAAQ8R,UAHtCb,EAAQc,OAAO,GAAI1gB,YAAW2O,IAatC,QAAS2D,GAAgBD,GAErB,GAAIuN,GAAUvN,EAAauN,OAG3BA,GAAQP,oBAAoBnS,EAAIwB,MAAO2D,GACvCuN,EAAQP,oBAAoBnS,EAAIyB,QAAS0D,GACzCuN,EAAQP,oBAAoBnS,EAAI0B,MAAOyD,GACvCuN,EAAQP,oBAAoBnS,EAAI2B,MAAOwD,EAGvC,KAAK,GAAI/T,GAAI,EAAGA,EAAIue,EAASle,OAAQL,IACjC,GAAIue,EAASve,KAAO+T,EAAc,CAC9BwK,EAAS3b,OAAO5C,EAAE,EAClB,OAKRshB,EAAQ1S,EAAIuB,WAGhB,QAAS8D,MACT,QAASL,MACT,QAASE,MAGT,QAAS6K,KACL,OACIuB,YAAa,SAAUxK,GACnB,OAAQA,EAAMvT,MAEV,IAAKyM,GAAIiB,QACL,GAAI6F,EAAM1J,SAAU,CAChB,GAAIA,GAAWyM,YAAYC,OAAOhD,EAAM1J,UAAY0J,EAAM1J,SAASM,OAASoJ,EAAM1J,QAClF8B,GAASjL,QAAQwP,EAAA,WAAOd,UAAWhH,IAAK,GAAA4V,GAAA,WAAYnU,EAAU,cAYtF,QAASiE,KACL,GAAIoT,GAAiB,KACjBC,EAAY,WACZrV,EAAa8S,oBAAoB,iBAAkBsC,GACnDpV,EAAaW,EAAIqB,cAAc5B,GAC/BP,EAASjL,QAAQwP,EAAA,WAAOT,wBAExB3D,GAAa0J,YAAc,EAC3B2L,KAEAD,EAAiBC,EAAUC,KAAKnkB,MAChC6O,EAAa0R,iBAAiB,iBAAkB0D,IAOxD,QAASpB,GAAmBuB,EAAYxX,GACpC,OAEIsV,QAASkC,EACTxX,SAAUA,EAEVqK,aAAc,WACV,MAAOjX,MAAKkiB,QAAQjB,WAGxBP,kBAAmB,WACf,MAAOC,MAGXC,eAAgB,WACZ,MAAO,aAKXE,YAAa,SAAUxK,GACnB,OAAQA,EAAMvT,MAEV,IAAKyM,GAAIwB,MACL,GAAIqT,GAAW,UACf3V,GAASjL,QAAQwP,EAAA,WAAOvB,WAAavE,KAAM,GAAAiU,GAAA,WAAaphB,KAAMqkB,IAC9D,MAAM,KACL7U,GAAIyB,QACL,GAAIA,GAAUoI,YAAYC,OAAOhD,EAAMrF,SAAWqF,EAAMrF,QAAQ/D,OAASoJ,EAAMrF,OAC/EvC,GAASjL,QAAQwP,EAAA,WAAO1B,sBAAwBpE,KAAM,GAAAoU,GAAA,WAAevhB,KAAMiR,EAASqF,EAAMgO,iBAC1F,MAAM,KACL9U,GAAI0B,MACL9C,EAAI,mBACJM,EAASjL,QAAQwP,EAAA,WAAOxB,UACxB,MAAM,KAELjC,GAAI2B,MACL/C,EAAI,qCAAuCpO,KAAKiX,gBAChDvI,EAASjL,QAAQwP,EAAA,WAAOrB,oBAAsBzE,KAAMnN,KAAKiX,oBA9S7E,GAAInS,GAAU9E,KAAK8E,QACf4J,EAAWnD,EAAOmD,SAClBN,EAAM7C,EAAO6C,IACboB,EAAMjE,EAAOiE,IAGbxL,EAAQC,OACR4K,EAAY5K,OACZ0I,EAAS1I,OACTgL,EAAShL,OACTuS,EAAevS,OACfkb,EAAQlb,OACRqb,EAAYrb,OACZgK,EAAuBhK,MAyT3B,OAjBAD,IACIqQ,eAAgBA,EAChBkC,uBAAwBA,EACxBG,aAAcA,EACd3C,gBAAiBA,EACjBgB,gBAAiBA,EACjBf,iBAAkBA,EAClBqD,iBAAkBA,EAClBzC,gBAAiBA,EACjBC,qBAAsBA,EACtBL,eAAgBA,EAChBE,iBAAkBA,EAClB7Q,MAAOA,GAGX8O,IAEO3O,EA/UXE,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAI0L,GAAwC3O,EARR,6CAUhC+M,EAAyCzL,EAAuBqN,GAEhE8R,EAAezgB,EAXC,oBAahB4f,EAAgBte,EAAuBmf,GAEvCC,EAAgB1gB,EAdC,qBAgBjBigB,EAAiB3e,EAAuBof,GAExCC,EAAkB3gB,EAjBC,uBAmBnBogB,EAAmB9e,EAAuBqf,GAE1CnI,EAA8BxY,EApBC,mCAsB/B6U,EAA+BvT,EAAuBkX,GAEtDoI,EAAuB5gB,EAvBC,4BAyBxBkf,EAAwB5d,EAAuBsf,GAE/CtI,EAAsBtY,EA1BP,kCA4Bf8R,EAAuBxQ,EAAuBgX,GAE9CrJ,EAAsBjP,EA7BD,iCA+BrBkP,EAAuB5N,EAAuB2N,EA8SlDuT,GAAyBpf,sBAAwB,2BAsBjD/E,EAAQ,WArBO6Q,EAAA,WAAahL,gBAAgBse,GAsB5ClkB,EAAOD,QAAUA,EAAQ,gSC3WzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAFzF,QAAS6hB,KAIL,QAAS1M,GAAwBL,EAAKvG,GAElC,GAAI0K,GAAUC,KAAKC,MAAMla,OAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAW2O,IACxEuG,IAAO,IACP,KAAK,GAAI5W,GAAI,EAAGA,EAAI+a,EAAQI,KAAK9a,OAAQL,IACrC4W,GAAOmE,EAAQI,KAAKnb,GAAK,GAG7B,OADA4W,GAAMA,EAAIgN,UAAU,EAAGhN,EAAIvW,OAAS,GAIxC,QAAS8W,KACL,MAAO,MAGX,QAASE,KACL,MAAO,OAGX,QAASG,GAAkBqM,GACvB,IAAKA,EAAe9gB,eAAe,QAC/B,MAAO,KAGX,KAAK,GADDmY,MACKlb,EAAI,EAAGA,EAAI6jB,EAAe7U,KAAK3O,OAAQL,IAAK,CACjD,GAAI8jB,GAAUD,EAAe7U,KAAKhP,GAC9B+jB,EAAQD,EAAQE,IAAIC,QAAQ,KAAM,IAClC1Z,EAAMuZ,EAAQI,EAAED,QAAQ,KAAM,GAElC/I,GAASta,KAAK,GAAA0a,GAAA,WAAYyI,EAAOxZ,IAErC,MAAO,IAAAgR,GAAA,WAAmBL,GAG9B,QAAStD,GAAiBiM,GACtB,MAAO9iB,QAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAWmiB,IArC1D,GAAIzgB,GAAQC,MAgDZ,OARAD,IACI6T,wBAAyBA,EACzBE,cAAeA,EACfE,gBAAiBA,EACjBG,kBAAmBA,EACnBI,iBAAkBA,GAjD1BtU,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIiY,GAAelb,EARC,oBAUhB+a,EAAgBzZ,EAAuB4Z,GAEvCC,EAAsBnb,EAXC,2BAavBgb,EAAuB1Z,EAAuB6Z,GAE9ClM,EAAsBjP,EAdD,iCAgBrBkP,EAAuB5N,EAAuB2N,EAuClDmU,GAAShgB,sBAAwB,WAiBjC/E,EAAQ,WAhBO6Q,EAAA,WAAa7L,oBAAoB+f,GAiBhD9kB,EAAOD,QAAUA,EAAQ,wHC9EzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAHzF,QAASqiB,KAyBL,QAASlN,GAAwBL,GAC7B,MAAOA,GAGX,QAASO,KACL,MAAO,OAGX,QAASE,GAAgB+M,GACrB,MAAOpS,GAAWoS,GAAchN,aAGpC,QAASI,GAAkBqM,EAAgBO,GACvC,MAAOpS,GAAWoS,GAAc5M,kBAAkBqM,GAGtD,QAASjM,GAAiBiM,EAAgBO,GACtC,MAAOpS,GAAWoS,GAAcxM,iBAAiBiM,GAxCrD,GAAM7R,IACFqS,sBACIjN,aAAc,OACdI,kBAAmB,SAAUC,GACzB,MAAOzM,GAAA,WAAOzJ,YAAYkW,EAAS6M,UAEvC1M,iBAAkB,SAAUH,GACxB,MAAOA,KAGf8M,2BACInN,aAAc,cACdI,kBAAmB,SAAUC,GACzB,MAAOA,IAEXG,iBAAkB,SAAUH,GACxB,MAAO1W,QAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAW+V,OAK9DrU,EAAQC,MA8BZ,OARAD,IACI6T,wBAAyBA,EACzBE,cAAeA,EACfE,gBAAiBA,EACjBG,kBAAmBA,EACnBI,iBAAkBA,GAnD1BtU,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIgM,GAAsBjP,EARD,iCAUrBkP,EAAuB5N,EAAuB2N,GAE9CzE,EAAqBxK,EAXN,mCAafyK,EAAsBnJ,EAAuBkJ,EA6CjDoZ,GAASxgB,sBAAwB,WAcjC/E,EAAQ,WAbO6Q,EAAA,WAAa7L,oBAAoBugB,GAchDtlB,EAAOD,QAAUA,EAAQ,yGCxEzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzF,QAAS0iB,KAIL,QAASvN,GAAwBL,GAC7B,MAAOA,GAGX,QAASO,KACL,MAAO,OAGX,QAASE,KACL,MAAO,cAGX,QAASG,GAAkBqM,GACvB,MAAOA,GAGX,QAASjM,GAAiBiM,GACtB,MAAO9iB,QAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAWmiB,IAnB1D,GAAIzgB,GAAQC,MA8BZ,OARAD,IACI6T,wBAAyBA,EACzBE,cAAeA,EACfE,gBAAiBA,EACjBG,kBAAmBA,EACnBI,iBAAkBA,GA7B1BtU,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIgM,GAAsBjP,EARD,iCAUrBkP,EAAuB5N,EAAuB2N,EA2BlDgV,GAAU7gB,sBAAwB,YAWlC/E,EAAQ,WAVO6Q,EAAA,WAAa7L,oBAAoB4gB,GAWhD3lB,EAAOD,QAAUA,EAAQ,qEC1DzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAJzF,QAAS2iB,KAIL,QAASxN,GAAwBL,GAC7B,MAAOA,GAGX,QAASO,KACL,MAAO,OAGX,QAASE,KACL,MAAO,cAGX,QAASG,GAAkBqM,GACvB,MAAOA,GAGX,QAASjM,GAAiBiM,GACtB,MAAO9iB,QAAOC,aAAa6D,MAAM,KAAM,GAAInD,YAAWmiB,IAnB1D,GAAIzgB,GAAQC,MA8BZ,OARAD,IACI6T,wBAAyBA,EACzBE,cAAeA,EACfE,gBAAiBA,EACjBG,kBAAmBA,EACnBI,iBAAkBA,GA7B1BtU,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIgM,GAAsBjP,EARD,iCAUrBkP,EAAuB5N,EAAuB2N,EA2BlDiV,GAAS9gB,sBAAwB,WAWjC/E,EAAQ,WAVO6Q,EAAA,WAAa7L,oBAAoB6gB,GAWhD5lB,EAAOD,QAAUA,EAAQ,qECtCzB,YAQA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCANhHlC,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAGX,IAAI0G,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrK,GAAI,EAAGA,EAAIqK,EAAMhK,OAAQL,IAAK,CAAE,GAAIsK,GAAaD,EAAMrK,EAAGsK,GAAYxE,WAAawE,EAAWxE,aAAc,EAAMwE,EAAYtE,cAAe,EAAU,SAAWsE,KAAYA,EAAWvE,UAAW,GAAKzC,OAAQC,eAAe6G,EAAQE,EAAWC,IAAKD,IAAgB,MAAQ,UAAU/E,EAAaiF,EAAYC,GAAgJ,MAA7HD,IAAYL,EAAiB5E,EAAYK,UAAW4E,GAAiBC,GAAaN,EAAiB5E,EAAakF,GAAqBlF,MAN3hBmf,EAAc,WACL,QADTA,GACUxJ,EAAU/Y,GAClB,GAUAmD,EAAgBlG,KAZlBslB,GAEMviB,GAAiB,eAATA,GAAkC,cAATA,EACjC,KAAM,IAAIlC,OAAM,6EACpBb,MAAK8b,SAAWA,EAChB9b,KAAK+C,KAAOA,EAkDhB,MA9BA+H,GAzBEwa,IA0BEna,IAAK,QACL/G,MAdC,WACD,GAAIxD,GACA2kB,EAAUvlB,KAAK8b,SAAS7a,OACxBukB,GAAO5V,QAEX,KAAKhP,EAAI,EAAO2kB,EAAJ3kB,EAAaA,IAAK,CAC1B,GAAIuK,IACAsa,IAAK,MACLC,IAAK,SACLd,IAAK5kB,KAAK8b,SAASlb,GAAGigB,MACtBiE,EAAG9kB,KAAK8b,SAASlb,GAAGuK,IAExBqa,GAAI5V,KAAKpO,KAAK2J,GAEdnL,KAAK+C,OACLyiB,EAAIziB,KAAO/C,KAAK+C,KAEpB,IAAI4iB,GAAY/J,KAAKgK,UAAUJ,GAC3B9D,EAAMiE,EAAU1kB,OAGhB4kB,EAAM,GAAIxM,aAAYqI,GACtBoE,EAAQ,GAAIxjB,YAAWujB,EAC3B,KAAKjlB,EAAI,EAAO8gB,EAAJ9gB,EAASA,IACjBklB,EAAMllB,GAAK+kB,EAAUpkB,WAAWX,EACpC,OAAOilB,OAtCTP,IA0DN9lB,GAAQ,WAhBO8lB,EAiBf7lB,EAAOD,QAAUA,EAAQ,oCC7DzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARM2hB,GACS,QADTA,GACUpR,EAAcqR,GAQ5B9f,EAAgBlG,KATZ+lB,GAEE/lB,KAAK2U,aAAeA,EACpB3U,KAAKgR,MAAQgV,EAYrBxmB,GAAQ,WAROumB,EASftmB,EAAOD,QAAUA,EAAQ,oCCbzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARM6hB,GACS,QADTA,GACUtR,EAAc1D,EAASuQ,EAAY3K,GAQjD3Q,EAAgBlG,KATZimB,GAEEjmB,KAAK2U,aAAeA,EACpB3U,KAAKiR,QAAUA,EACfjR,KAAKwhB,WAAaA,EAClBxhB,KAAK6W,YAAcA,EAAcA,EAAc,kBAYvDrX,GAAQ,WAROymB,EASfxmB,EAAOD,QAAUA,EAAQ,oCCrBzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARM8hB,GACS,QADTA,GACUrF,EAAO1V,GAQrBjF,EAAgBlG,KATZkmB,GAEElmB,KAAK6gB,MAAQA,EACb7gB,KAAKmL,IAAMA,EAYnB3L,GAAQ,WARO0mB,EASfzmB,EAAOD,QAAUA,EAAQ,oCCZzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARM+hB,GACS,QADTA,GACUxZ,EAAWqX,GAQzB9d,EAAgBlG,KATZmmB,GAEEnmB,KAAK2M,UAAYA,EACjB3M,KAAKgkB,gBAAkBA,EAY/BxkB,GAAQ,WARO2mB,EASf1mB,EAAOD,QAAUA,EAAQ,oCCVzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARMgiB,GACS,QADTA,GACU1Q,EAAmBC,EAAmB0Q,EAAuBC,EAAiBC,GAQ5FrgB,EAAgBlG,KATZomB,GAEEpmB,KAAKwmB,eAAkB,QACvBxmB,KAAK0V,kBAAoBA,EACzB1V,KAAK2V,kBAAoBA,EACzB3V,KAAKqmB,sBAAwBA,EAC7BrmB,KAAKsmB,gBAAkBA,EACvBtmB,KAAKumB,aAAeA,EAY5B/mB,GAAQ,WARO4mB,EASf3mB,EAAOD,QAAUA,EAAQ,oCC/BzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARMqiB,GACS,QADTA,GACUrG,EAAasG,GAQ3BxgB,EAAgBlG,KATZymB,GAEEzmB,KAAKogB,YAAcA,EACnBpgB,KAAK0mB,WAAaA,EAY1BlnB,GAAQ,WAROinB,EASfhnB,EAAOD,QAAUA,EAAQ,oCCpBzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARMuiB,GAMS,QANTA,GAMU/Z,EAAUuM,GASxBjT,EAAgBlG,KAfZ2mB,GAOE3mB,KAAK4M,SAAWA,EAChB5M,KAAKmZ,aAAeA,EAa5B3Z,GAAQ,WATOmnB,EAUflnB,EAAOD,QAAUA,EAAQ,oCC1BzB,YAMA,SAASiD,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAAWF,GAazF,QAASkkB,KAOL,QAASC,GAAgBC,GACrBpY,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,aAAcsF,MAAOwQ,IAIhE,QAASE,GAAcC,EAAIzP,EAAK0P,GAC5BxY,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,WAAYsF,OAAQ2Q,GAAIA,EAAIzP,IAAKA,EAAK0P,QAASA,KAI1F,QAASC,GAAclW,EAASgW,EAAI9T,GAChCzE,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,gBAAiBsF,OAAQrF,QAASA,EAASgW,GAAIA,EAAI9T,SAAUA,KAIxG,QAASiU,GAAenW,EAASgW,EAAII,GACjC3Y,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,KAAMsF,OAAQrF,QAASA,EAASgW,GAAIA,EAAIK,GAAID,KAGvF,QAASE,GAAiBT,GACtBpY,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,cAAesF,MAAOwQ,IAGjE,QAASU,GAAqBV,GAC1BpY,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,cAAesF,MAAOwQ,IAGjE,QAASxF,GAAqBwF,GAC1BpY,EAASjL,QAAQwP,EAAA,WAAO8T,OAAQ/V,MAAO,cAAesF,MAAOwQ,IAjCjE,GAAI9iB,GAAQC,OACRa,EAAU9E,KAAK8E,QACf4J,GAAW,EAAA+Y,EAAA,YAAS3iB,GAASa,aA4CjC,OAVA3B,IACI6iB,gBAAiBA,EACjBG,cAAeA,EACfG,cAAeA,EACfC,eAAgBA,EAChBG,iBAAkBA,EAClBC,qBAAsBA,EACtBlG,qBAAsBA,GA9D9Bpd,OAAOC,eAAe3E,EAAS,cAC3B4E,OAAO,GAKX,IAAIsjB,GAAkBvmB,EARD,0BAUjBsmB,EAAmBhlB,EAAuBilB,GAE1CjO,EAAsBtY,EAXP,+BAaf8R,EAAuBxQ,EAAuBgX,GAE9CrJ,EAAsBjP,EAdD,8BAgBrBkP,EAAuB5N,EAAuB2N,GAd5CuX,EAAoC,cACpCC,EAAoC,YAEpCC,EAAoC,WACpCC,EAAoC,OACpCC,EAAoC,UACpCC,EAAoC,iBACpCC,EAAoC,QAEpCC,EAAoC,QACpCC,EAAoC,QACpCC,EAAoC,YAEpCC,EAAoC,OAqD1CzB,GAAariB,sBAAwB,cAErC,IAAMuB,GAAUuK,EAAA,WAAa7L,oBAAoBoiB,EAEjD9gB,GAAQ6hB,6BAAsCA,EAC9C7hB,EAAQ8hB,2BAAsCA,EAC9C9hB,EAAQ+hB,2BAAsCA,EAC9C/hB,EAAQgiB,uBAAsCA,EAC9ChiB,EAAQiiB,0BAAsCA,EAC9CjiB,EAAQkiB,iCAAsCA,EAC9CliB,EAAQmiB,wBAAsCA,EAC9CniB,EAAQoiB,wBAAsCA,EAC9CpiB,EAAQqiB,wBAAsCA,EAC9CriB,EAAQsiB,4BAAsCA,EAC9CtiB,EAAQuiB,0BAAsCA,EAkB9C7oB,EAAQ,WAhBOsG,EAiBfrG,EAAOD,QAAUA,EAAQ,6HCnGzB,YAMA,SAAS0G,GAAgBlC,EAAUmC,GAAe,KAAMnC,YAAoBmC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHlC,OAAOC,eAAe3E,EAAS,cAC7B4E,OAAO,GAKT,IARMvD,GACS,QADTA,GACUC,EAAMmQ,EAAS9D,GAQ7BjH,EAAgBlG,KATZa,GAEEb,KAAKc,KAAOA,GAAQ,KACpBd,KAAKiR,QAAUA,GAAW,KAC1BjR,KAAKmN,KAAOA,GAAQ,KAY5B3N,GAAQ,WAROqB,EASfpB,EAAOD,QAAUA,EAAQ","file":"dash.protection.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker.js';\n\nfunction EventBus() {\n\n    let instance;\n    let handlers = {};\n\n\n    function on(type, listener, scope) {\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        var handler = {\n            callback: listener,\n            scope: scope\n        };\n\n        handlers[type] = handlers[type] || [];\n        handlers[type].push(handler);\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n\n        var idx = getHandlerIdx(type, listener, scope);\n\n        if (idx < 0) return;\n\n        handlers[type].splice(idx, 1);\n    }\n\n    function trigger(type, args) {\n        if (!type || !handlers[type]) return;\n\n        args = args || {};\n\n        if (args.hasOwnProperty('type')) {\n            throw new Error('\\'type\\' is a reserved word for event dispatching');\n        }\n\n        args.type = type;\n\n        handlers[type].forEach(function (handler) {\n            handler.callback.call(handler.scope, args);\n        });\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n        var handlersForType = handlers[type];\n        var result = -1;\n\n        if (!handlersForType || handlersForType.length === 0) return result;\n\n        for (var i = 0; i < handlersForType.length; i++) {\n            if (handlersForType[i].callback === listener && (!scope || scope === handlersForType[i].scope)) return i;\n        }\n\n        return result;\n    }\n\n    instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nexport default FactoryMaker.getSingletonFactory(EventBus);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @Module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param context {Object} injected into extended object as this.context\n     * @param className {String} string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param context\n     * @param className\n     * @param instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase.js';\n\n/**\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.AST_IN_FUTURE = 'astinfuture';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CHUNK_APPENDED = 'chunkAppended';\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUALITY_CHANGED = 'qualityChanged';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents.js';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BASE64 from '../../../externals/base64.js';\n\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param cpArray array of content protection elements\n     * @returns the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        var retVal = null;\n        for (var i = 0; i < cpArray.length; ++i) {\n            var cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                    cp.value.toLowerCase() === 'cenc')\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param pssh {ArrayBuffer} the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        var offset = 8; // Box size and type fields\n        var view = new DataView(pssh);\n\n        // Read version\n        var version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer} The PSSH box data corresponding to the given key system\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        var psshList = CommonEncryption.parsePSSHList(initData);\n        if (psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param cpData the ContentProtection element\n     * @returns {ArrayBuffer} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData) {\n        if ('pssh' in cpData) {\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param data {ArrayBuffer} the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {object} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null)\n            return [];\n\n        var dv = new DataView(data);\n        var done = false;\n        var pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        var byteCursor = 0;\n        while (!done) {\n\n            var size,\n                nextBox,\n                version,\n                systemID,\n                psshDataSize;\n            var boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            var i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            psshDataSize = dv.getUint32(byteCursor);\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n}\n\nexport default CommonEncryption;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController.js';\nimport ProtectionKeyController from './controllers/ProtectionKeyController.js';\nimport ProtectionEvents from './ProtectionEvents.js';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015.js';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014.js';\nimport ProtectionModel_01b from './models/ProtectionModel_01b.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n\n        let controller = null;\n\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({log: config.log,});\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                adapter: config.adapter,\n                eventBus: config.eventBus,\n                log: config.log\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n\n        let log = config.log;\n        let eventBus = config.eventBus;\n        let videoElement = config.videoModel.getElement();\n\n        if (videoElement.onencrypted !== undefined &&\n            videoElement.mediaKeys !== undefined &&\n            navigator.requestMediaKeySystemAccess !== undefined &&\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\n\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n\n            log('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\n\n        } else {\n\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n\n        for (var i = 0; i < apis.length; i++) {\n            var api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nlet factory = FactoryMaker.getClassFactory(Protection);\nfactory.events = ProtectionEvents;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase.js';\n/**\n * @Class\n *\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events\n     */\n    constructor () {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @ignore\n         */\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @ignore\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from '../CommonEncryption.js';\nimport Events from '../../../core/events/Events.js';\nimport MediaCapability from '../vo/MediaCapability.js';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport Protection from '../Protection.js';\n\n/**\n * @Module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n */\n\nfunction ProtectionController(config) {\n\n    let protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    let adapter = config.adapter;\n    let eventBus = config.eventBus;\n    let log = config.log;\n\n    let instance,\n        keySystems,\n        pendingNeedKeyData,\n        audioInfo,\n        videoInfo,\n        protDataSet,\n        initialized,\n        sessionType,\n        keySystem;\n\n    function setup() {\n        keySystems = protectionKeyController.getKeySystems();\n        pendingNeedKeyData = [];\n        initialized = false;\n        sessionType = 'temporary';\n\n        Events.extend(Protection.events);\n    }\n\n    /**\n     * Initialize this protection system with a given manifest and optional audio\n     * and video stream information.\n     *\n     * @param {Object} manifest the json version of the manifest XML document for the\n     * desired content.  Applications can download their manifest using\n     * {@link module:MediaPlayer#retrieveManifest}\n     * @param {StreamInfo} [aInfo] audio stream information\n     * @param {StreamInfo} [vInfo] video stream information\n     * @memberof module:ProtectionController\n     * @instance\n     * @todo This API will change when we have better support for allowing applications\n     * to select different adaptation sets for playback.  Right now it is clunky for\n     * applications to create {@link StreamInfo} with the right information,\n     */\n    function initialize(manifest, aInfo, vInfo) {\n\n        // TODO: We really need to do much more here... We need to be smarter about knowing\n        // which adaptation sets for which we have initialized, including the default key ID\n        // value from the ContentProtection elements so we know whether or not we still need to\n        // select key systems and acquire keys.\n        if (!initialized) {\n\n            var streamInfo;\n\n            if (!aInfo && !vInfo) {\n                // Look for ContentProtection elements.  InitData can be provided by either the\n                // dash264drm:Pssh ContentProtection format or a DRM-specific format.\n                streamInfo = adapter.getStreamsInfo(manifest)[0]; // TODO: Single period only for now. See TODO above\n            }\n\n            audioInfo = aInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'audio') : null);\n            videoInfo = vInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'video') : null);\n\n            var mediaInfo = (videoInfo) ? videoInfo : audioInfo; // We could have audio or video only\n\n            // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\n            // and video will be the same.  Just use one valid MediaInfo object\n            var supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\n            if (supportedKS && supportedKS.length > 0) {\n                selectKeySystem(supportedKS, true);\n            }\n\n            initialized = true;\n        }\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from\n     * the MPD or from the PSSH box in the media\n     *\n     * @param {ArrayBuffer} initData the initialization data\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\n     * to come up to speed with the latest EME standard\n     */\n    function createKeySession(initData) {\n        var initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\n        if (initDataForKS) {\n\n            // Check for duplicate initData\n            var currentInitData = protectionModel.getAllInitData();\n            for (var i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    log('DRM: Ignoring initData because we have already seen it!');\n                    return;\n                }\n            }\n            try {\n                protectionModel.createKeySession(initDataForKS, sessionType);\n            } catch (error) {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error creating key session! ' + error.message});\n            }\n        } else {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Selected key system is ' + keySystem.systemString + '.  needkey/encrypted event contains no initData corresponding to that key system!'});\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This\n     * essentially creates a new key session\n     *\n     * @param {string} sessionID\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     */\n    function loadKeySession(sessionID) {\n        protectionModel.loadKeySession(sessionID);\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function removeKeySession(sessionToken) {\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function closeKeySession(sessionToken) {\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(Events.NEED_KEY, onNeedKey, this);\n            eventBus.on(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(Events.NEED_KEY, onNeedKey, this);\n            eventBus.off(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {String} sessionType the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n    }\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions.  In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function reset() {\n        setMediaElement(null);\n\n        keySystem = undefined;//TODO-Refactor look at why undefined is needed for this. refactor\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n    }\n\n    ///////////////\n    // Private\n    ///////////////\n\n    function getProtData(keySystem) {\n        var protData = null;\n        var keySystemString = keySystem.systemString;\n\n        if (protDataSet) {\n            protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n        }\n        return protData;\n    }\n\n    function selectKeySystem(supportedKS, fromManifest) {\n\n        var self = this;\n\n        // Build our request object for requestKeySystemAccess\n        var audioCapabilities = [];\n        var videoCapabilities = [];\n\n        if (videoInfo) {\n            videoCapabilities.push(new MediaCapability(videoInfo.codec));\n        }\n        if (audioInfo) {\n            audioCapabilities.push(new MediaCapability(audioInfo.codec));\n        }\n        var ksConfig = new KeySystemConfiguration(\n                audioCapabilities, videoCapabilities, 'optional',\n                (sessionType === 'temporary') ? 'optional' : 'required',\n                [sessionType]);\n        var requestedKeySystems = [];\n\n        var ksIdx;\n        if (keySystem) {\n            // We have a key system\n            for (ksIdx = 0; ksIdx < supportedKS.length; ksIdx++) {\n                if (keySystem === supportedKS[ksIdx].ks) {\n\n                    requestedKeySystems.push({ks: supportedKS[ksIdx].ks, configs: [ksConfig]});\n\n                    // Ensure that we would be granted key system access using the key\n                    // system and codec information\n                    let onKeySystemAccessComplete = function (event) {\n                        eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                        if (event.error) {\n                            if (!fromManifest) {\n                                eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                            }\n                        } else {\n                            log('DRM: KeySystem Access Granted');\n                            eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: event.data});\n                            createKeySession(supportedKS[ksIdx].initData);\n                        }\n                    };\n                    eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                    protectionModel.requestKeySystemAccess(requestedKeySystems);\n                    break;\n                }\n            }\n        }\n        else if (keySystem === undefined) {\n            // First time through, so we need to select a key system\n            keySystem = null;\n            pendingNeedKeyData.push(supportedKS);\n\n            // Add all key systems to our request list since we have yet to select a key system\n            for (var i = 0; i < supportedKS.length; i++) {\n                requestedKeySystems.push({ks: supportedKS[i].ks, configs: [ksConfig]});\n            }\n\n            var keySystemAccess;\n            var onKeySystemAccessComplete = function (event) {\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (event.error) {\n                    keySystem = undefined;\n                    eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                    }\n                } else {\n                    keySystemAccess = event.data;\n                    log('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\n                    protectionModel.selectKeySystem(keySystemAccess);\n                }\n            };\n            var onKeySystemSelected = function (event) {\n                eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (!event.error) {\n                    keySystem = protectionModel.getKeySystem();\n                    eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: keySystemAccess});\n                    for (var i = 0; i < pendingNeedKeyData.length; i++) {\n                        for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\n                            if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData);\n                                break;\n                            }\n                        }\n                    }\n                } else {\n                    keySystem = undefined;\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: Error selecting key system! -- ' + event.error});\n                    }\n                }\n            };\n            eventBus.on(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n            eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            protectionModel.requestKeySystemAccess(requestedKeySystems);\n        } else {\n            // We are in the process of selecting a key system, so just save the data\n            pendingNeedKeyData.push(supportedKS);\n        }\n    }\n\n    function sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(Events.LICENSE_REQUEST_COMPLETE, {data: data, error: error});\n    }\n\n    function onKeyMessage(e) {\n        log('DRM: onKeyMessage');\n        if (e.error) {\n            log(e.error);\n            return;\n        }\n\n        // Dispatch event to applications indicating we received a key message\n        var keyMessage = e.data;\n        eventBus.trigger(Events.KEY_MESSAGE, {data: keyMessage});\n        var messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        var message = keyMessage.message;\n        var sessionToken = keyMessage.sessionToken;\n        var protData = getProtData(keySystem);\n        var keySystemString = keySystem.systemString;\n        var licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\n        var eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Message not destined for license server\n        if (!licenseServerData) {\n            log('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\n            sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(keySystem)) {\n            var clearkeys = protectionKeyController.processClearKeyLicenseRequest(protData, message);\n            if (clearkeys)  {\n                log('DRM: ClearKey license request handled by application!');\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // All remaining key system scenarios require a request to a remote license server\n        var xhr = new XMLHttpRequest();\n\n        // Determine license server URL\n        var url = null;\n        if (protData) {\n            if (protData.serverURL) {\n                var serverURL = protData.serverURL;\n                if (typeof serverURL === 'string' && serverURL !== '') {\n                    url = serverURL;\n                } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                    url = serverURL[messageType];\n                }\n            } else if (protData.laURL && protData.laURL !== '') { // TODO: Deprecated!\n                url = protData.laURL;\n            }\n        } else {\n            url = keySystem.getLicenseServerURLFromInitData(CommonEncryption.getPSSHData(sessionToken.initData));\n            if (!url) {\n                url = e.data.laURL;\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        // Ensure valid license server URL\n        if (!url) {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: No license server URL specified!');\n            return;\n        }\n\n        xhr.open(licenseServerData.getHTTPMethod(messageType), url, true);\n        xhr.responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        xhr.onload = function () {\n            if (this.status == 200) {\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken,\n                        licenseServerData.getLicenseMessage(this.response, keySystemString, messageType));\n            } else {\n                sendLicenseRequestCompleteEvent(eventData,\n                        'DRM: ' + keySystemString + ' update, XHR status is \"' + this.statusText + '\" (' + this.status +\n                        '), expected to be 200. readyState is ' + this.readyState +\n                        '.  Response is ' + ((this.response) ? licenseServerData.getErrorResponse(this.response, keySystemString, messageType) : 'NONE'));\n            }\n        };\n        xhr.onabort = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR aborted. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n        xhr.onerror = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR error. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        var updateHeaders = function (headers) {\n            var key;\n            if (headers) {\n                for (key in headers) {\n                    if ('authorization' === key.toLowerCase()) {\n                        xhr.withCredentials = true;\n                    }\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        };\n        if (protData) {\n            updateHeaders(protData.httpRequestHeaders);\n        }\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\n\n        // Set withCredentials property from protData\n        if (protData && protData.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.send(keySystem.getLicenseRequestFromMessage(message));\n    }\n\n    function onNeedKey(event) {\n        log('DRM: onNeedKey');\n        // Ignore non-cenc initData\n        if (event.key.initDataType !== 'cenc') {\n            log('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n            return;\n        }\n\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n        // Convert to ArrayBuffer\n        var abInitData = event.key.initData;\n        if (ArrayBuffer.isView(abInitData)) {\n            abInitData = abInitData.buffer;\n        }\n\n        log('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n        var supportedKS = protectionKeyController.getSupportedKeySystems(abInitData);\n        if (supportedKS.length === 0) {\n            log('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n            return;\n        }\n\n        selectKeySystem(supportedKS, false);\n    }\n\n    instance = {\n        initialize: initialize,\n        createKeySession: createKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        setMediaElement: setMediaElement,\n        setSessionType: setSessionType,\n        setProtectionData: setProtectionData,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default FactoryMaker.getClassFactory(ProtectionController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption.js';\nimport KeySystemClearKey from './../drm/KeySystemClearKey.js';\nimport KeySystemWidevine from './../drm/KeySystemWidevine.js';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady.js';\nimport DRMToday from './../servers/DRMToday.js';\nimport PlayReady from './../servers/PlayReady.js';\nimport Widevine from './../servers/Widevine.js';\nimport ClearKey from './../servers/ClearKey.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\n/**\n * @module ProtectionKeyController\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        log,\n        keySystems,\n        clearkeyKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.log) {\n            log = config.log;\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        var keySystem;\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance();\n        keySystems.push(keySystem);\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance();\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance();\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {KeySystem[]} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (var i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param initData1 {ArrayBuffer} first initData\n     * @param initData2 {ArrayBuffer} second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            var data1 = new Uint8Array(initData1);\n            var data2 = new Uint8Array(initData2);\n\n            for (var j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Object[]} cps array of content protection elements parsed\n     * from the manifest\n     * @returns {Object[]} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @returns {KeySystem} Object.ks the key\n     * system identified by the ContentProtection element\n     * @returns {ArrayBuffer} Object.initData the initialization data parsed\n     * from the ContentProtection element\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        var cp, ks, ksIdx, cpIdx;\n        var supportedKS = [];\n\n        if (cps) {\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n\n                        // Look for DRM-specific ContentProtection\n                        var initData = ks.getInitData(cp);\n                        if (!!initData) {\n                            supportedKS.push({\n                                ks: keySystems[ksIdx],\n                                initData: initData\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Only key systems supported by this player\n     * will be returned.  Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @returns {Object[]} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @returns {KeySystem} Object.ks the key\n     * system\n     * @returns {ArrayBuffer} Object.initData the initialization data\n     * associated with the key system\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystems(initData) {\n        var ksIdx;\n        var supportedKS = [];\n        var pssh = CommonEncryption.parsePSSHList(initData);\n\n        for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            if (keySystems[ksIdx].uuid in pssh) {\n                supportedKS.push({\n                    ks: keySystems[ksIdx],\n                    initData: pssh[keySystems[ksIdx].uuid]\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {String} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @return {LicenseServer} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServer(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType == 'individualization-request') {\n            return null;\n        }\n\n        var licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance();\n        } else if (keySystem.systemString === 'com.widevine.alpha') {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === 'com.microsoft.playready') {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === 'org.w3.clearkey') {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            log('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        isClearKey: isClearKey,\n        initDataEquals: initDataEquals,\n        getKeySystems: getKeySystems,\n        getKeySystemBySystemString: getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystems: getSupportedKeySystems,\n        getLicenseServer: getLicenseServer,\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default FactoryMaker.getSingletonFactory(ProtectionKeyController);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair.js';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\nimport CommonEncryption from '../CommonEncryption.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = 'org.w3.clearkey';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey() {\n\n    let instance;\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        var clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            var keyPairs = [];\n            for (var i = 0; i < jsonMsg.kids.length; i++) {\n                var clearkeyID = jsonMsg.kids[i];\n                var clearkey = (protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default FactoryMaker.getSingletonFactory(KeySystemClearKey);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption.js';\nimport Error from '../../vo/Error.js';\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport BASE64 from '../../../../externals/base64.js';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = 'com.microsoft.playready';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemPlayReady() {\n\n    let instance;\n    let messageFormat = 'utf16';\n\n    function getRequestHeadersFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var headers = {};\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        var headerNameList = xmlDoc.getElementsByTagName('name');\n        var headerValueList = xmlDoc.getElementsByTagName('value');\n        for (var i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var licenseRequest = null;\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('Challenge')[0]) {\n            var Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        }\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            var data = new DataView(initData);\n            var numRecords = data.getUint16(4, true);\n            var offset = 6;\n            var parser = new DOMParser();\n\n            for (var i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                var recordType = data.getUint16(offset, true);\n                offset += 2;\n                var recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                var recordData = initData.slice(offset, offset + recordLength);\n                var record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                var xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    var laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    var luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        var PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        var playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        var byteCursor = 0;\n        var uint8arraydecodedPROHeader = null;\n\n        var PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf8\" or \"utf16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf8' && format !== 'utf16') {\n            throw new Error('Illegal PlayReady message format! -- ' + format);\n        }\n        messageFormat = format;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default FactoryMaker.getSingletonFactory(KeySystemPlayReady);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = 'com.widevine.alpha';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine() {\n\n    let instance;\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\nimport NeedKey from '../vo/NeedKey.js';\nimport KeyError from '../vo/KeyError.js';\nimport KeyMessage from '../vo/KeyMessage.js';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\nimport Events from '../../../core/events/Events.js';\nimport ErrorHandler from '../../utils/ErrorHandler.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction ProtectionModel_01b(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n    let instance,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n        errHandler,\n\n        // With this version of the EME APIs, sessionIDs are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIDs\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIDs\n        sessions,\n\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        errHandler = ErrorHandler(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (var i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        var ve = videoElement;\n        if (!ve) { // Must have a video element to do this capability tests\n            ve = document.createElement('video');\n        }\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                //var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n\n            var newSession = { // Implements SessionToken\n                sessionID: null,\n                initData: initData,\n                getSessionID: function () {\n                    return this.sessionID;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        var sessionID = sessionToken.sessionID;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), sessionToken.initData, sessionID);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (var i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\n            }\n        }\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                var sessionToken = null;\n                switch (event.type) {\n\n                    case api.needkey:\n                        var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            var msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n                                    break;\n                                case 2:\n                                    msg += 'MEDIA_KEYERR_CLIENT - The Key System could not be installed or updated.';\n                                    break;\n                                case 3:\n                                    msg += 'MEDIA_KEYERR_SERVICE - The message passed into update indicated an error from the license service.';\n                                    break;\n                                case 4:\n                                    msg += 'MEDIA_KEYERR_OUTPUT - There is no available output device with the required characteristics for the content protection system.';\n                                    break;\n                                case 5:\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - A hardware configuration change caused a content protection error.';\n                                    break;\n                                case 6:\n                                    msg += 'MEDIA_KEYERR_DOMAIN - An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, msg)});\n                        } else {\n                            log('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            log('DRM: Key added.');\n                            eventBus.trigger(Events.KEY_ADDED, {data: sessionToken});//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            log('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n\n                            // Attempt to find an uninitialized token with this sessionID\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionID and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionID = event.sessionId;\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.mediaKeyMessageError('Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!');\n                            }\n                        }\n\n                        if (sessionToken) {\n                            var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(sessionToken, message, event.defaultURL)});\n\n                        } else {\n                            log('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionID value\n     *\n     * @param sessionArray {Array} the array of sessions to search\n     * @param sessionID the sessionID to search for\n     * @returns {*} the session token with the given sessionID\n     */\n    function findSessionByID(sessionArray, sessionID) {\n\n        if (!sessionID || !sessionArray) {\n            return null;\n        } else {\n            var len = sessionArray.length;\n            for (var i = 0; i < len; i++) {\n                if (sessionArray[i].sessionID == sessionID) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default FactoryMaker.getClassFactory(ProtectionModel_01b);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\nimport NeedKey from '../vo/NeedKey.js';\nimport KeyError from '../vo/KeyError.js';\nimport KeyMessage from '../vo/KeyMessage.js';\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\nimport Events from '../../../core/events/Events.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n\n    var instance,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        var numSessions = sessions.length;\n        var session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            var done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (var i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n\n        }).catch(function () {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            // videoElement.setMediaKeys(null);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            log('DRM: License server certificate successfully updated.');\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\n        });\n    }\n\n    function createKeySession(initData, sessionType) {\n\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession(sessionType);\n        var sessionToken = createSessionToken(session, initData, sessionType);\n\n        // Generate initial key request\n        session.generateRequest('cenc', initData).then(function () {\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message).catch(function (error) {\n            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\n        });\n    }\n\n    function loadKeySession(sessionID) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession();\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                var sessionToken = createSessionToken(session);\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\n            }\n        }).catch(function (error) {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        var session = sessionToken.session;\n\n        session.remove().then(function () {\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\n        }, function (error) {\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n        (function (i) {\n            var keySystem = ksConfigurations[i].ks;\n            var configs = ksConfigurations[i].configs;\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\n\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                var configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                        mediaKeySystemAccess.getConfiguration() : null;\n                var keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n\n            }).catch(function () {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied!'});\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case 'encrypted':\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType) {\n\n        var token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(Events.KEY_STATUSES_CHANGED, {data: this});\n                        break;\n\n                    case 'message':\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\nimport NeedKey from '../vo/NeedKey.js';\nimport KeyError from '../vo/KeyError.js';\nimport KeyMessage from '../vo/KeyMessage.js';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\nimport Events from '../../../core/events/Events.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n\n    let instance,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (var audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        var capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n\n        if (capabilities === null)\n          throw new Error('Can not create sessions for unknown content types.');\n\n        var contentType = capabilities.contentType;\n        var session = mediaKeys.createSession(contentType, new Uint8Array(initData));\n        var sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param sessionToken the session token\n     */\n    function closeKeySession(sessionToken) {\n\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        var boundDoSetKeys = null;\n        var doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.error:\n                        var errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(Events.KEY_ERROR, { data: new KeyError(this, errorStr) });\n                        break;\n                    case api.message:\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        log('DRM: Key added.');\n                        eventBus.trigger(Events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(Events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair.js';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url, message/*, messageType*/) {\n        // Build ClearKey server query string\n        var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n        url += '/?';\n        for (var i = 0; i < jsonMsg.kids.length; i++) {\n            url += jsonMsg.kids[i] + '&';\n        }\n        url = url.substring(0, url.length - 1);\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'GET';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        var keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            var keypair = serverResponse.keys[i];\n            var keyid = keypair.kid.replace(/=/g, '');\n            var key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default FactoryMaker.getSingletonFactory(ClearKey);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport BASE64 from '../../../../externals/base64.js';\n\nfunction DRMToday() {\n\n    const keySystems = {\n        'com.widevine.alpha': {\n            responseType: 'json',\n            getLicenseMessage: function (response) {\n                return BASE64.decodeArray(response.license);\n            },\n            getErrorResponse: function (response) {\n                return response;\n            }\n        },\n        'com.microsoft.playready': {\n            responseType: 'arraybuffer',\n            getLicenseMessage: function (response) {\n                return response;\n            },\n            getErrorResponse: function (response) {\n                return String.fromCharCode.apply(null, new Uint8Array(response));\n            }\n        }\n    };\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default FactoryMaker.getSingletonFactory(DRMToday);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction PlayReady() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default FactoryMaker.getSingletonFactory(PlayReady);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default FactoryMaker.getSingletonFactory(Widevine);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * A collection of ClearKey encryption keys with an (optional) associated\n * type\n *\n * @param keyPairs {KeyPair[]} array of key pairs\n * @param type the type of keys in this set.  One of either 'persistent'\n * or 'temporary'.  Can also be null or undefined.\n * @class\n * @ignore\n */\nclass ClearKeyKeySet {\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        var i;\n        var numKeys = this.keyPairs.length;\n        var jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            var key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        var jwkString = JSON.stringify(jwk);\n        var len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        var buf = new ArrayBuffer(len);\n        var bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * EME-independent KeyError\n *\n * @param sessionToken the key session to which this error is associated\n * @param errorString an informational error message\n * @class\n * @deprecated Newest versions of EME APIs will not use this error object\n */\nclass KeyError {\n    constructor(sessionToken, errorString) {\n        this.sessionToken = sessionToken;\n        this.error = errorString;\n    }\n}\n\nexport default KeyError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * EME-independent KeyMessage\n *\n * @param {SessionToken} sessionToken the session\n * to which the key message is associated\n * @param {ArrayBuffer} message the key message\n * @param [defaultURL] license acquisition URL provided by the CDM\n * @param [messageType=\"license-request\"] the message type.  Supported message types can be found\n * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n * @class\n */\nclass KeyMessage {\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents a 128-bit keyID and 128-bit encryption key\n *\n * @param keyID {String} 128-bit key ID, base64 encoded, with no padding\n * @param key {String} 128-bit encryption key, base64 encoded, with no padding\n * @class\n * @ignore\n */\nclass KeyPair {\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n *\n * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n * @param {KeySystemConfiguration} ksConfiguration the\n * subset of configurations passed to the key system access request that are supported\n * by this user agent\n * @class\n * @ignore\n */\nclass KeySystemAccess {\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents a set of configurations that describe the capabilities desired for\n * support by a given CDM\n *\n * @param {MediaCapability[]} audioCapabilities array of\n * desired audio capabilities.  Higher preference capabilities should be placed earlier\n * in the array.\n * @param {MediaCapability[]} videoCapabilities array of\n * desired video capabilities.  Higher preference capabilities should be placed earlier\n * in the array.\n * @param {string} [distinctiveIdentifier=\"optional\"] desired use of distinctive identifiers.\n * One of \"required\", \"optional\", or \"not-allowed\"\n * @param {string} [persistentState=\"optional\"] desired support for persistent storage of\n * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n * @param {string[]} [sessionTypes=[\"temporary\"]] List of session types that must\n * be supported by the key system\n * @class\n */\nclass KeySystemConfiguration {\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        this.audioCapabilities = audioCapabilities;\n        this.videoCapabilities = videoCapabilities;\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * A media capability\n *\n * @param {string} contentType MIME type and codecs (RFC6386)\n * @param {string} [robustness]\n * @constructor\n * @ignore\n */\nclass MediaCapability {\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {String} [initDataType] initialization data type\n     * @constructor\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Error {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default Error;"]}