{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/FactoryMaker.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/events/CoreEvents.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/events/Events.js","/Users/marcoslhc/projects/televisa/dash.js/src/core/events/EventsBase.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/MediaPlayerEvents.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/MetricsReporting.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/MetricsReportingEvents.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/controllers/MetricsCollectionController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/controllers/MetricsController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/controllers/MetricsHandlersController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/controllers/RangeController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/controllers/ReportingController.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/metrics/MetricsHandlerFactory.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/metrics/handlers/BufferLevelHandler.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/metrics/handlers/GenericMetricHandler.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/metrics/handlers/HttpListHandler.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/reporting/ReportingFactory.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/reporting/reporters/DVBReporting.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/utils/DVBErrorsTranslator.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/utils/HandlerHelpers.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/utils/ManifestParsing.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/utils/MetricSerialiser.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/utils/RNG.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/vo/DVBErrors.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/vo/Metrics.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/vo/Range.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/metrics/vo/Reporting.js","/Users/marcoslhc/projects/televisa/dash.js/src/streaming/utils/CustomTimeRanges.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","MetricsReporting","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","Object","defineProperty","value","FactoryMaker","extend","name","childInstance","override","context","extensionContext","getExtensionContext","instance","getSingletonInstance","className","singletonContexts","obj","setSingletonInstance","push","getClassFactory","classConstructor","undefined","create","merge","__dashjs_factory_name","apply","arguments","getSingletonFactory","getInstance","args","extensionObject","extension","factory","parent","prop","hasOwnProperty","extensions","forEach","_interopRequireDefault","__esModule","default","_classCallCheck","Constructor","TypeError","_inherits","subClass","superClass","prototype","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","getPrototypeOf","_EventsBaseJs","_EventsBaseJs2","CoreEvents","_EventsBase","AST_IN_FUTURE","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CHUNK_APPENDED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUALITY_CHANGED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ALL_ELEMENTS_LOADED","XLINK_ELEMENT_LOADED","XLINK_READY","_CoreEventsJs","_CoreEventsJs2","Events","_CoreEvents","events","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","EventsBase","config","publicOnly","evt","indexOf","_coreEventsEventsBaseJs","_coreEventsEventsBaseJs2","MediaPlayerEvents","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","ERROR","LOG","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","CAN_PLAY","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_METADATA_LOADED","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","mediaPlayerEvents","createMetricsReporting","dvbErrorsTranslator","_utilsDVBErrorsTranslatorJs2","eventBus","metricsModel","_controllersMetricsCollectionControllerJs2","getReportingFactory","_reportingReportingFactoryJs2","getMetricsHandlerFactory","_metricsMetricsHandlerFactoryJs2","_utilsDVBErrorsTranslatorJs","_MetricsReportingEventsJs","_MetricsReportingEventsJs2","_controllersMetricsCollectionControllerJs","_metricsMetricsHandlerFactoryJs","_reportingReportingFactoryJs","_coreFactoryMakerJs","_coreFactoryMakerJs2","MetricsReportingEvents","METRICS_INITIALISATION_COMPLETE","BECAME_REPORTING_PLAYER","metricsReportingEvents","MetricsCollectionController","update","error","controllersToRemove","keys","metricsControllers","metrics","_utilsManifestParsingJs2","dashManifestModel","getMetrics","manifest","m","JSON","stringify","splice","controller","_MetricsControllerJs2","initialize","c","reset","trigger","setup","on","_coreEventsEventsJs2","_MetricsControllerJs","_utilsManifestParsingJs","_coreEventsEventsJs","MetricsController","metricsEntry","rangeController","_RangeControllerJs2","mediaElement","Range","reportingController","_ReportingControllerJs2","log","Reporting","metricsHandlersController","_MetricsHandlersControllerJs2","_RangeControllerJs","_ReportingControllerJs","_MetricsHandlersControllerJs","MetricsHandlersController","handle","handlers","handler","handleNewMetric","metric","mediaType","split","midx","ms","nextm","metricsHandlerFactory","_MediaPlayerEventsJs2","off","_MediaPlayerEventsJs","RangeController","rs","start","starttime","end","duration","ranges","add","useWallClockTime","_useWallClockTime","clear","_utilsCustomTimeRangesJs2","isEnabled","time","numRanges","Date","getTime","currentTime","_utilsCustomTimeRangesJs","ReportingController","reporting","some","reporter","reportingFactory","reporters","report","type","vos","MetricsHandlerFactory","listType","matches","match","keyRegex","knownFactoryProducts","message","register","unregister","BufferLevel","_handlersBufferLevelHandlerJs2","DVBErrors","_handlersDVBErrorsHandlerJs2","HttpList","_handlersHttpListHandlerJs2","PlayList","_handlersGenericMetricHandlerJs2","RepSwitchList","TcpList","_handlersBufferLevelHandlerJs","_handlersDVBErrorsHandlerJs","_handlersHttpListHandlerJs","_handlersGenericMetricHandlerJs","BufferLevelHandler","getLowestBufferLevelVO","storedVOs","map","reduce","b","level","intervalCallback","vo","lastReportedTime","basename","rc","n_ms","handlerHelpers","validateN","reconstructFullMetricName","interval","setInterval","clearInterval","_utilsHandlerHelpersJs2","_utilsHandlerHelpersJs","DVBErrorsHandler","onInitialisationComplete","unused","GenericMetricHandler","metricName","HttpListHandler","storedVos","requestType","ReportingFactory","entry","knownReportingSchemeIdUris","schemeIdUri","moduleName","urn:dvb:dash:reporting:2014","_reportersDVBReportingJs2","_reportersDVBReportingJs","DVBReporting","doGetRequest","url","successCB","failureCB","req","XMLHttpRequest","oncomplete","reqIndex","pendingRequests","status","open","onloadend","onerror","send","Array","isArray","isReportingPlayer","metricSerialiser","serialise","USE_DRAFT_DVB_SPEC","reportingUrl","probability","reportingPlayerStatusDecided","randomNumberGenerator","random","allowPendingRequestsToCompleteOnReset","abort","_utilsMetricSerialiserJs2","_utilsRNGJs2","_utilsMetricSerialiserJs","_utilsRNGJs","DVBErrorsTranslator","_voDVBErrorsJs2","mpd","mpdurl","originalUrl","terror","metricModel","addDVBErrors","onManifestUpdate","onServiceLocationChanged","errorcode","BASE_URL_CHANGED","servicelocation","onBecameReporter","BECAME_REPORTER","handleHttpMetric","responsecode","CONNECTION_ERROR","tresponse","_serviceLocation","onMetricEvent","onPlaybackError","reason","MediaError","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","CORRUPT_MEDIA_OTHER","initialise","_voDVBErrorsJs","HandlerHelpers","mn","isNaN","ManifestParsing","getMetricsRangeStartTime","dynamic","range","periods","reportingStartTime","getMpd","presentationStartTime","availabilityStartTime","getRegularPeriods","Metrics_asArray","metricEntry","_voMetricsJs2","isDynamic","getIsDynamic","Range_asArray","rangeEntry","_voRangeJs2","getDuration","Reporting_asArray","reportingEntry","_voReportingJs2","_voMetricsJs","_voRangeJs","_voReportingJs","MetricSerialiser","pairs","v","isBuiltIn","toString","slice","encodeURIComponent","join","toISOString","Math","round","RNG","crypto","randomNumbers","ArrayType","NUM_RANDOM_NUMBERS","getRandomValues","index","rand","min","max","MAX_VALUE","msCrypto","Uint32Array","pow","BYTES_PER_ELEMENT","ipaddress","SSL_CONNECTION_FAILED_PREFIX","DNS_RESOLUTION_FAILED","HOST_UNREACHABLE","CONNECTION_REFUSED","CORRUPT_MEDIA_ISOBMFF","Metrics","Infinity","CustomTimeRanges","customTimeRangeArray","mergeRanges","remove","rangeIndex1","rangeIndex2","range1","range2"],"mappings":"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","file":"dash.reporting.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @Module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param context {Object} injected into extended object as this.context\n     * @param className {String} string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param context\n     * @param className\n     * @param instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase.js';\n\n/**\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.AST_IN_FUTURE = 'astinfuture';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CHUNK_APPENDED = 'chunkAppended';\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUALITY_CHANGED = 'qualityChanged';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents.js';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase.js';\n/**\n * @Class\n *\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor () {\n        super();\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferstalled';\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferloaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when {@link module:Debug} log method is called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestloaded';\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricschanged';\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricchanged';\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricadded';\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricupdated';\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'streamswitchcompleted';\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'streamswitchstarted';\n        /**\n         * Triggered when the stream is setup and ready.\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'alltexttracksadded';\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'texttrackadded';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrorsTranslator from './utils/DVBErrorsTranslator.js';\nimport MetricsReportingEvents from './MetricsReportingEvents.js';\nimport MetricsCollectionController from './controllers/MetricsCollectionController.js';\nimport MetricsHandlerFactory from './metrics/MetricsHandlerFactory.js';\nimport ReportingFactory from './reporting/ReportingFactory.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction MetricsReporting() {\n\n    let context = this.context;\n    let instance;\n\n    let dvbErrorsTranslator;\n\n    /**\n     * Create a MetricsCollectionController, and a DVBErrorsTranslator\n     * @return {MetricsCollectionController} Metrics Collection Controller\n     */\n    function createMetricsReporting(config) {\n        dvbErrorsTranslator = DVBErrorsTranslator(context).getInstance({\n            eventBus: config.eventBus,\n            metricsModel: config.metricsModel,\n        });\n\n        return MetricsCollectionController(context).create(config);\n    }\n\n    /**\n     * Get the ReportingFactory to allow new reporters to be registered\n     * @return {ReportingFactory} Reporting Factory\n     */\n    function getReportingFactory() {\n        return ReportingFactory(context).getInstance();\n    }\n\n    /**\n     * Get the MetricsHandlerFactory to allow new handlers to be registered\n     * @return {MetricsHandlerFactory} Metrics Handler Factory\n     */\n    function getMetricsHandlerFactory() {\n        return MetricsHandlerFactory(context).getInstance();\n    }\n\n    instance = {\n        createMetricsReporting:     createMetricsReporting,\n        getReportingFactory:        getReportingFactory,\n        getMetricsHandlerFactory:   getMetricsHandlerFactory\n    };\n\n    return instance;\n}\n\nMetricsReporting.__dashjs_factory_name = 'MetricsReporting';\nlet factory = FactoryMaker.getClassFactory(MetricsReporting);\nfactory.events = MetricsReportingEvents;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase.js';\n\nclass MetricsReportingEvents extends EventsBase {\n    constructor () {\n        super();\n\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\n    }\n}\n\nlet metricsReportingEvents = new MetricsReportingEvents();\nexport default metricsReportingEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsController from './MetricsController.js';\nimport ManifestParsing from '../utils/ManifestParsing.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport MetricsReportingEvents from '../MetricsReportingEvents.js';\nimport Events from '../../../core/events/Events.js';\n\nfunction MetricsCollectionController(config) {\n\n    let metricsControllers = {};\n\n    let context = this.context;\n    let eventBus = config.eventBus;\n\n    function update(e) {\n        if (e.error) {\n            return;\n        }\n\n        // start by assuming all existing controllers need removing\n        let controllersToRemove = Object.keys(metricsControllers);\n\n        const metrics = ManifestParsing(context).getInstance({\n            dashManifestModel: config.dashManifestModel\n        }).getMetrics(e.manifest);\n\n        metrics.forEach(m => {\n            const key = JSON.stringify(m);\n\n            if (!metricsControllers.hasOwnProperty(key)) {\n                try {\n                    var controller = MetricsController(context).create(config);\n                    controller.initialize(m);\n                    metricsControllers[key] = controller;\n                } catch (e) {\n                    // fail quietly\n                }\n            } else {\n                // we still need this controller - delete from removal list\n                controllersToRemove.splice(key, 1);\n            }\n        });\n\n        // now remove the unwanted controllers\n        controllersToRemove.forEach(c => {\n            metricsControllers[c].reset();\n            delete metricsControllers[c];\n        });\n\n        eventBus.trigger(\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE\n        );\n    }\n\n    function reset() {\n        Object.keys(metricsControllers).forEach(key => {\n            metricsControllers[key].reset();\n        });\n\n        metricsControllers = {};\n    }\n\n    function setup() {\n\n\n        eventBus.on(Events.MANIFEST_UPDATED, update);\n        eventBus.on(Events.STREAM_TEARDOWN_COMPLETE, reset);\n    }\n\n    setup();\n\n    // don't export any actual methods\n    return {};\n}\n\nMetricsCollectionController.__dashjs_factory_name = 'MetricsCollectionController';\nexport default FactoryMaker.getClassFactory(MetricsCollectionController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport RangeController from './RangeController.js';\nimport ReportingController from './ReportingController.js';\nimport MetricsHandlersController from './MetricsHandlersController.js';\n\nfunction MetricsController(config) {\n\n    let metricsHandlersController,\n        reportingController,\n        rangeController,\n        instance;\n\n    let context = this.context;\n\n    function initialize(metricsEntry) {\n        try {\n            rangeController = RangeController(context).create({\n                mediaElement: config.mediaElement\n            });\n\n            rangeController.initialize(metricsEntry.Range);\n\n            reportingController = ReportingController(context).create({\n                log: config.log\n            });\n\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\n\n            metricsHandlersController = MetricsHandlersController(context).create({\n                log: config.log,\n                eventBus: config.eventBus,\n            });\n\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\n        } catch (e) {\n            reset();\n            throw e;\n        }\n    }\n\n    function reset() {\n        if (metricsHandlersController) {\n            metricsHandlersController.reset();\n        }\n\n        if (reportingController) {\n            reportingController.reset();\n        }\n\n        if (rangeController) {\n            rangeController.reset();\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsController.__dashjs_factory_name = 'MetricsController';\nexport default FactoryMaker.getClassFactory(MetricsController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsHandlerFactory from '../metrics/MetricsHandlerFactory.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport MediaPlayerEvents from '../../MediaPlayerEvents.js';\n\nfunction MetricsHandlersController(config) {\n    let handlers = [];\n\n    let instance;\n    let context = this.context;\n    let eventBus = config.eventBus;\n\n    let metricsHandlerFactory = MetricsHandlerFactory(context).getInstance({\n        log: config.log,\n        eventBus: config.eventBus\n    });\n\n    function handle(e) {\n        handlers.forEach(handler => {\n            handler.handleNewMetric(e.metric, e.value, e.mediaType);\n        });\n    }\n\n    function initialize(metrics, reportingController) {\n        metrics.split(',').forEach(\n            (m, midx, ms) => {\n                var handler;\n\n                // there is a bug in ISO23009-1 where the metrics attribute\n                // is a comma-separated list but HttpList key can contain a\n                // comma enclosed by ().\n                if ((m.indexOf('(') !== -1) && m.indexOf(')') === -1) {\n                    let nextm = ms[midx + 1];\n\n                    if (nextm &&\n                            (nextm.indexOf('(') === -1) &&\n                            (nextm.indexOf(')') !== -1)) {\n                        m += ',' + nextm;\n\n                        // delete the next metric so forEach does not visit.\n                        delete ms[midx + 1];\n                    }\n                }\n\n                handler = metricsHandlerFactory.create(\n                    m,\n                    reportingController\n                );\n\n                if (handler) {\n                    handlers.push(handler);\n                }\n            }\n        );\n\n        eventBus.on(\n            MediaPlayerEvents.METRIC_ADDED,\n            handle,\n            instance\n        );\n\n        eventBus.on(\n            MediaPlayerEvents.METRIC_UPDATED,\n            handle,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(\n            MediaPlayerEvents.METRIC_ADDED,\n            handle,\n            instance\n        );\n\n        eventBus.off(\n            MediaPlayerEvents.METRIC_UPDATED,\n            handle,\n            instance\n        );\n\n        handlers.forEach(handler => handler.reset());\n\n        handlers = [];\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsHandlersController.__dashjs_factory_name = 'MetricsHandlersController';\nexport default FactoryMaker.getClassFactory(MetricsHandlersController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport CustomTimeRanges from '../../utils/CustomTimeRanges.js';\n\nfunction RangeController(config) {\n\n    let useWallClockTime = false;\n    let context = this.context;\n    let instance,\n        ranges;\n\n    let mediaElement = config.mediaElement;\n\n    function initialize(rs) {\n        if (rs && rs.length) {\n            rs.forEach(r => {\n                var start = r.starttime;\n                var end = start + r.duration;\n\n                ranges.add(start, end);\n            });\n\n            useWallClockTime = !!rs[0]._useWallClockTime;\n        }\n    }\n\n    function reset() {\n        ranges.clear();\n    }\n\n    function setup() {\n        ranges = CustomTimeRanges(context).create();\n    }\n\n    function isEnabled() {\n        var numRanges = ranges.length;\n        var time;\n\n        if (!numRanges) {\n            return true;\n        }\n\n        // When not present, DASH Metrics reporting is requested\n        // for the whole duration of the content.\n        time = useWallClockTime ?\n                (new Date().getTime() / 1000) :\n                mediaElement.currentTime;\n\n        for (var i = 0; i < numRanges; i += 1) {\n            let start = ranges.start(i);\n            let end = ranges.end(i);\n\n            if ((start <= time) && (time < end)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        isEnabled:  isEnabled\n    };\n\n    setup();\n\n    return instance;\n}\n\nRangeController.__dashjs_factory_name = 'RangeController';\nexport default FactoryMaker.getClassFactory(RangeController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport ReportingFactory from '../reporting/ReportingFactory.js';\n\nfunction ReportingController(config) {\n\n    let reporters = [];\n    let instance;\n\n    let reportingFactory = ReportingFactory(this.context).getInstance({\n        log: config.log\n    });\n\n    function initialize(reporting, rangeController) {\n        // \"if multiple Reporting elements are present, it is expected that\n        // the client processes one of the recognized reporting schemes.\"\n        // to ignore this, and support multiple Reporting per Metric,\n        // simply change the 'some' below to 'forEach'\n        reporting.some(r => {\n            var reporter = reportingFactory.create(r, rangeController);\n\n            if (reporter) {\n                reporters.push(reporter);\n                return true;\n            }\n        });\n    }\n\n    function reset() {\n        reporters.forEach(r => r.reset());\n        reporters = [];\n    }\n\n    function report(type, vos) {\n        reporters.forEach(r => r.report(type, vos));\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        report:     report\n    };\n\n    return instance;\n}\n\nReportingController.__dashjs_factory_name = 'ReportingController';\nexport default FactoryMaker.getClassFactory(ReportingController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport BufferLevel from './handlers/BufferLevelHandler.js';\nimport DVBErrors from './handlers/DVBErrorsHandler.js';\nimport HttpList from './handlers/HttpListHandler.js';\nimport GenericMetricHandler from './handlers/GenericMetricHandler.js';\n\nfunction MetricsHandlerFactory(config) {\n\n    let instance;\n    let log = config.log;\n\n    // group 1: key, [group 3: n [, group 5: type]]\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\n\n    let context = this.context;\n    let knownFactoryProducts = {\n        BufferLevel:    BufferLevel,\n        DVBErrors:      DVBErrors,\n        HttpList:       HttpList,\n        PlayList:       GenericMetricHandler,\n        RepSwitchList:  GenericMetricHandler,\n        TcpList:        GenericMetricHandler\n    };\n\n    function create(listType, reportingController) {\n        var matches = listType.match(keyRegex);\n        var handler;\n\n        if (!matches) {\n            return;\n        }\n\n        try {\n            handler = knownFactoryProducts[matches[1]](context).create({\n                eventBus: config.eventBus\n            });\n\n            handler.initialize(\n                matches[1],\n                reportingController,\n                matches[3],\n                matches[5]\n            );\n        } catch (e) {\n            handler = null;\n\n            log(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\n        }\n\n        return handler;\n    }\n\n    function register(key, handler) {\n        knownFactoryProducts[key] = handler;\n    }\n\n    function unregister(key) {\n        delete knownFactoryProducts[key];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\nexport default FactoryMaker.getSingletonFactory(MetricsHandlerFactory);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport HandlerHelpers from '../../utils/HandlerHelpers.js';\n\nfunction BufferLevelHandler() {\n\n    let instance,\n        reportingController,\n        n,\n        name,\n        interval,\n        lastReportedTime;\n\n    let context = this.context;\n    let handlerHelpers = HandlerHelpers(context).getInstance();\n\n    let storedVOs = [];\n\n    function getLowestBufferLevelVO() {\n        try {\n            return Object.keys(storedVOs).map(\n                key => storedVOs[key]\n            ).reduce(\n                (a, b) => {\n                    return (a.level < b.level) ? a : b;\n                }\n            );\n        } catch (e) {\n            return;\n        }\n    }\n\n    function intervalCallback() {\n        var vo = getLowestBufferLevelVO();\n\n        if (vo) {\n            if (lastReportedTime !== vo.t) {\n                lastReportedTime = vo.t;\n                reportingController.report(name, vo);\n            }\n        }\n    }\n\n    function initialize(basename, rc, n_ms) {\n        if (rc) {\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n            reportingController = rc;\n            name = handlerHelpers.reconstructFullMetricName(basename, n_ms);\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = 0;\n        reportingController = null;\n        lastReportedTime = null;\n    }\n\n    function handleNewMetric(metric, vo, type) {\n        if (metric === 'BufferLevel') {\n            storedVOs[type] = vo;\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nBufferLevelHandler.__dashjs_factory_name = 'BufferLevelHandler';\nexport default FactoryMaker.getClassFactory(BufferLevelHandler);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport MetricsReportingEvents from '../../MetricsReportingEvents.js';\n\nfunction DVBErrorsHandler(config) {\n\n    let instance,\n        reportingController;\n\n    let eventBus = config.eventBus;\n\n    function onInitialisationComplete() {\n        // we only want to report this once per call to initialize\n        eventBus.off(\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\n            onInitialisationComplete,\n            this\n        );\n\n        // Note: A Player becoming a reporting Player is itself\n        // something which is recorded by the DVBErrors metric.\n        eventBus.trigger(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER\n        );\n    }\n\n    function initialize(unused, rc) {\n        if (rc) {\n            reportingController = rc;\n\n            eventBus.on(\n                MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\n                onInitialisationComplete,\n                this\n            );\n        }\n    }\n\n    function reset() {\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === 'DVBErrors') {\n            if (reportingController) {\n                reportingController.report(metric, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nexport default FactoryMaker.getClassFactory(DVBErrorsHandler);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\n\nfunction GenericMetricHandler() {\n\n    let instance,\n        metricName,\n        reportingController;\n\n    function initialize(name, rc) {\n        metricName = name;\n        reportingController = rc;\n    }\n\n    function reset() {\n        reportingController = null;\n        metricName = undefined;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === metricName) {\n            if (reportingController) {\n                reportingController.report(metricName, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nGenericMetricHandler.__dashjs_factory_name = 'GenericMetricHandler';\nexport default FactoryMaker.getClassFactory(GenericMetricHandler);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport HandlerHelpers from '../../utils/HandlerHelpers.js';\n\nfunction HttpListHandler() {\n\n    let instance,\n        reportingController,\n        n,\n        type,\n        name,\n        interval;\n\n    let storedVos = [];\n\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\n\n    function intervalCallback() {\n        var vos = storedVos;\n\n        if (vos.length) {\n            if (reportingController) {\n                reportingController.report(name, vos);\n            }\n        }\n\n        storedVos = [];\n    }\n\n    function initialize(basename, rc, n_ms, requestType) {\n        if (rc) {\n\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n\n            reportingController = rc;\n\n            if (requestType && requestType.length) {\n                type = requestType;\n            }\n\n            name = handlerHelpers.reconstructFullMetricName(\n                basename,\n                n_ms,\n                requestType\n            );\n\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = null;\n        type = null;\n        storedVos = [];\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        if (metric === 'HttpList') {\n            if (!type || (type === vo.type)) {\n                storedVos.push(vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\nexport default FactoryMaker.getClassFactory(HttpListHandler);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport DVBReporting from './reporters/DVBReporting.js';\n\nfunction ReportingFactory(config) {\n\n    let knownReportingSchemeIdUris = {\n        'urn:dvb:dash:reporting:2014': DVBReporting\n    };\n\n    let context = this.context;\n    let log = config.log;\n    let instance;\n\n    function create(entry, rangeController) {\n        var reporting;\n\n        try {\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create();\n\n            reporting.initialize(entry, rangeController);\n        } catch (e) {\n            reporting = null;\n\n            log(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\n        }\n\n        return reporting;\n    }\n\n    function register(schemeIdUri, moduleName) {\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\n    }\n\n    function unregister(schemeIdUri) {\n        delete knownReportingSchemeIdUris[schemeIdUri];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\nexport default FactoryMaker.getSingletonFactory(ReportingFactory);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport MetricSerialiser from '../../utils/MetricSerialiser.js';\nimport RNG from '../../utils/RNG.js';\n\nfunction DVBReporting() {\n    let instance;\n\n    let context = this.context;\n    let metricSerialiser = MetricSerialiser(context).getInstance();\n    let randomNumberGenerator = RNG(context).getInstance();\n\n    let USE_DRAFT_DVB_SPEC = true;\n    let isReportingPlayer = false;\n    let reportingPlayerStatusDecided = false;\n    let reportingUrl = null;\n    let rangeController = null;\n    let allowPendingRequestsToCompleteOnReset = true;\n    let pendingRequests = [];\n\n    function doGetRequest(url, successCB, failureCB) {\n        var req = new XMLHttpRequest();\n        var oncomplete = function () {\n            var reqIndex = pendingRequests.indexOf(req);\n\n            if (reqIndex === -1) {\n                return;\n            } else {\n                pendingRequests.splice(reqIndex, 1);\n            }\n\n            if ((req.status >= 200) && (req.status < 300)) {\n                if (successCB) {\n                    successCB();\n                }\n            } else {\n                if (failureCB) {\n                    failureCB();\n                }\n            }\n        };\n\n        pendingRequests.push(req);\n\n        try {\n            req.open('GET', url);\n            req.onloadend = oncomplete;\n            req.onerror = oncomplete;\n            req.send();\n        } catch (e) {\n            req.onerror();\n        }\n    }\n\n    function report(type, vos) {\n        if (!Array.isArray(vos)) {\n            vos = [vos];\n        }\n\n        // If the Player is not a reporting Player, then the Player shall\n        // not report any errors.\n        // ... In addition to any time restrictions specified by a Range\n        // element within the Metrics element.\n        if (isReportingPlayer && rangeController.isEnabled()) {\n\n            // This reporting mechanism operates by creating one HTTP GET\n            // request for every entry in the top level list of the metric.\n            vos.forEach(function (vo) {\n                var url = metricSerialiser.serialise(vo);\n\n                // this has been proposed for errata\n                if (USE_DRAFT_DVB_SPEC && (type !== 'DVBErrors')) {\n                    url = `metricname=${type}&${url}`;\n                }\n\n                // Take the value of the @reportingUrl attribute, append a\n                // question mark ('?') character and then append the string\n                // created in the previous step.\n                url = `${reportingUrl}?${url}`;\n\n                // Make an HTTP GET request to the URL contained within the\n                // string created in the previous step.\n                doGetRequest(url, null, function () {\n                    // If the Player is unable to make the report, for\n                    // example because the @reportingUrl is invalid, the\n                    // host cannot be reached, or an HTTP status code other\n                    // than one in the 200 series is received, the Player\n                    // shall cease being a reporting Player for the\n                    // duration of the MPD.\n                    isReportingPlayer = false;\n                });\n            });\n        }\n    }\n\n    function initialize(entry, rc) {\n        var probability;\n\n        rangeController = rc;\n\n        reportingUrl = entry['dvb:reportingUrl'];\n\n        // If a required attribute is missing, the Reporting descriptor may\n        // be ignored by the Player\n        if (!reportingUrl) {\n            throw new Error(\n                'required parameter missing (dvb:reportingUrl)'\n            );\n        }\n\n        // A Player's status, as a reporting Player or not, shall remain\n        // static for the duration of the MPD, regardless of MPD updates.\n        // (i.e. only calling reset (or failure) changes this state)\n        if (!reportingPlayerStatusDecided) {\n            // NOTE: DVB spec has a typo where it incorrectly references the\n            // priority attribute, which should be probability\n            probability = entry['dvb:probability'] || entry['dvb:priority'] || 0;\n            // If the @priority attribute is set to 1000, it shall be a reporting Player.\n            // If the @priority attribute is missing, the Player shall not be a reporting Player.\n            // For any other value of the @probability attribute, it shall decide at random whether to be a\n            // reporting Player, such that the probability of being one is @probability/1000.\n            if (probability && (probability === 1000 || ((probability / 1000) >= randomNumberGenerator.random()))) {\n                isReportingPlayer = true;\n            }\n\n            reportingPlayerStatusDecided = true;\n        }\n    }\n\n    function reset() {\n        if (!allowPendingRequestsToCompleteOnReset) {\n            pendingRequests.forEach(req => req.abort());\n            pendingRequests = [];\n        }\n\n        reportingPlayerStatusDecided = false;\n        isReportingPlayer = false;\n        reportingUrl = null;\n        rangeController = null;\n    }\n\n    instance = {\n        report:     report,\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nDVBReporting.__dashjs_factory_name = 'DVBReporting';\nexport default FactoryMaker.getClassFactory(DVBReporting);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrors from '../vo/DVBErrors.js';\nimport Events from '../../../core/events/Events.js';\nimport MediaPlayerEvents from '../../MediaPlayerEvents.js';\nimport MetricsReportingEvents from '../MetricsReportingEvents.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction DVBErrorsTranslator(config) {\n\n    let instance;\n    let eventBus = config.eventBus;\n    let metricModel = config.metricsModel;\n    let mpd;\n\n    function report(vo) {\n        var o = new DVBErrors();\n\n        if (!mpd) {\n            return;\n        }\n\n        for (const key in vo) {\n            if (vo.hasOwnProperty(key)) {\n                o[key] = vo[key];\n            }\n        }\n\n        if (!o.mpdurl) {\n            o.mpdurl = mpd.originalUrl || mpd.url;\n        }\n\n        if (!o.terror) {\n            o.terror = new Date();\n        }\n\n        metricModel.addDVBErrors(o);\n    }\n\n    function onManifestUpdate(e) {\n        if (e.error) {\n            return;\n        }\n\n        mpd = e.manifest;\n    }\n\n    function onServiceLocationChanged(e) {\n        report({\n            errorcode:          DVBErrors.BASE_URL_CHANGED,\n            servicelocation:    e.entry\n        });\n    }\n\n    function onBecameReporter() {\n        report({\n            errorcode: DVBErrors.BECAME_REPORTER\n        });\n    }\n\n    function handleHttpMetric(vo) {\n        if ((vo.responsecode === 0) ||      // connection failure - unknown\n                (vo.responsecode >= 400) || // HTTP error status code\n                (vo.responsecode < 100) ||  // unknown status codes\n                (vo.responsecode >= 600)) { // unknown status codes\n            report({\n                errorcode:          vo.responsecode || DVBErrors.CONNECTION_ERROR,\n                url:                vo.url,\n                terror:             vo.tresponse,\n                servicelocation:    vo._serviceLocation\n            });\n        }\n    }\n\n    function onMetricEvent(e) {\n        switch (e.metric) {\n        case 'HttpList':\n            handleHttpMetric(e.value);\n            break;\n        default:\n            break;\n        }\n    }\n\n    function onPlaybackError(e) {\n        var reason = e.error ? e.error.code : 0;\n        var errorcode;\n\n        switch (reason) {\n            case MediaError.MEDIA_ERR_NETWORK:\n                errorcode = DVBErrors.CONNECTION_ERROR;\n                break;\n            case MediaError.MEDIA_ERR_DECODE:\n                errorcode = DVBErrors.CORRUPT_MEDIA_OTHER;\n                break;\n            default:\n                return;\n        }\n\n        report({\n            errorcode: errorcode\n        });\n    }\n\n    function initialise() {\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.on(\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.on(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.off(\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.off(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    instance = {\n        initialise: initialise,\n        reset:      reset\n    };\n\n    initialise();\n\n    return instance;\n}\n\nDVBErrorsTranslator.__dashjs_factory_name = 'DVBErrorsTranslator';\nexport default FactoryMaker.getSingletonFactory(DVBErrorsTranslator);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction HandlerHelpers() {\n    return {\n        reconstructFullMetricName: function (key, n, type) {\n            var mn = key;\n\n            if (n) {\n                mn += '(' + n;\n\n                if (type && type.length) {\n                    mn += ',' + type;\n                }\n\n                mn += ')';\n            }\n\n            return mn;\n        },\n\n        validateN: function (n_ms) {\n            if (!n_ms) {\n                throw 'missing n';\n            }\n\n            if (isNaN(n_ms)) {\n                throw 'n is NaN';\n            }\n\n            // n is a positive integer is defined to refer to the metric\n            // in which the buffer level is recorded every n ms.\n            if (n_ms < 0) {\n                throw 'n must be positive';\n            }\n\n            return n_ms;\n        }\n    };\n}\n\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\nexport default FactoryMaker.getSingletonFactory(HandlerHelpers);\n","import Metrics from '../vo/Metrics.js';\nimport Range from '../vo/Range.js';\nimport Reporting from '../vo/Reporting.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction ManifestParsing (config) {\n    let instance;\n    let dashManifestModel = config.dashManifestModel;\n\n    function getMetricsRangeStartTime(manifest, dynamic, range) {\n        var mpd = dashManifestModel.getMpd(manifest);\n        var periods;\n        var presentationStartTime = 0;\n        var reportingStartTime;\n\n        if (dynamic) {\n            // For services with MPD@type='dynamic', the start time is\n            // indicated in wall clock time by adding the value of this\n            // attribute to the value of the MPD@availabilityStartTime\n            // attribute.\n            presentationStartTime = mpd.availabilityStartTime.getTime() / 1000;\n        } else {\n            // For services with MPD@type='static', the start time is indicated\n            // in Media Presentation time and is relative to the PeriodStart\n            // time of the first Period in this MPD.\n            periods = this.getRegularPeriods(manifest, mpd);\n\n            if (periods.length) {\n                presentationStartTime = periods[0].start;\n            }\n        }\n\n        // When not present, DASH Metrics collection is\n        // requested from the beginning of content\n        // consumption.\n        reportingStartTime = presentationStartTime;\n\n        if (range && range.hasOwnProperty('starttime')) {\n            reportingStartTime += range.starttime;\n        }\n\n        return reportingStartTime;\n    }\n\n    function getMetrics(manifest) {\n        var metrics = [];\n\n        if (manifest.Metrics_asArray) {\n            manifest.Metrics_asArray.forEach(metric => {\n                var metricEntry = new Metrics();\n                var isDynamic = dashManifestModel.getIsDynamic(manifest);\n\n                if (metric.hasOwnProperty('metrics')) {\n                    metricEntry.metrics = metric.metrics;\n                } else {\n                    //console.log(\"Invalid Metrics. metrics must be set. Ignoring.\");\n                    return;\n                }\n\n                if (metric.Range_asArray) {\n                    metric.Range_asArray.forEach(range => {\n                        var rangeEntry = new Range();\n\n                        rangeEntry.starttime =\n                            getMetricsRangeStartTime(manifest, isDynamic, range);\n\n                        if (range.hasOwnProperty('duration')) {\n                            rangeEntry.duration = range.duration;\n                        } else {\n                            // if not present, the value is identical to the\n                            // Media Presentation duration.\n                            rangeEntry.duration = dashManifestModel.getDuration(manifest);\n                        }\n\n                        rangeEntry._useWallClockTime = isDynamic;\n\n                        metricEntry.Range.push(rangeEntry);\n                    });\n                }\n\n                if (metric.Reporting_asArray) {\n                    metric.Reporting_asArray.forEach(reporting => {\n                        var reportingEntry = new Reporting();\n\n                        if (reporting.hasOwnProperty('schemeIdUri')) {\n                            reportingEntry.schemeIdUri = reporting.schemeIdUri;\n                        } else {\n                            // Invalid Reporting. schemeIdUri must be set. Ignore.\n                            return;\n                        }\n\n                        for (const prop in reporting) {\n                            if (reporting.hasOwnProperty(prop)) {\n                                reportingEntry[prop] = reporting[prop];\n                            }\n                        }\n\n                        metricEntry.Reporting.push(reportingEntry);\n                    });\n                } else {\n                    // Invalid Metrics. At least one reporting must be present. Ignore\n                    return;\n                }\n\n                metrics.push(metricEntry);\n            });\n        }\n\n        return metrics;\n    }\n\n    instance = {\n        getMetrics: getMetrics\n    };\n\n    return instance;\n}\n\nManifestParsing.__dashjs_factory_name = 'ManifestParsing';\nexport default FactoryMaker.getSingletonFactory(ManifestParsing);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction MetricSerialiser() {\n\n    // For each entry in the top level list within the metric (in the case\n    // of the DVBErrors metric each entry corresponds to an \"error event\"\n    // described in clause 10.8.4) the Player shall:\n    function serialise(metric) {\n        var pairs = [];\n        var obj = [];\n        var key,\n            value;\n\n        // Take each (key, value) pair from the metric entry and create a\n        // string consisting of the name of the key, followed by an equals\n        // ('=') character, followed by the string representation of the\n        // value. The string representation of the value is created based\n        // on the type of the value following the instructions in Table 22.\n        for (key in metric) {\n            if (metric.hasOwnProperty(key) && (key.indexOf('_') !== 0)) {\n                value = metric[key];\n\n                // we want to ensure that keys still end up in the report\n                // even if there is no value\n                if ((value === undefined) || (value === null)) {\n                    value = '';\n                }\n\n                // DVB A168 10.12.4 Table 22\n                if (Array.isArray(value)) {\n                    // if trace or similar is null, do not include in output\n                    if (!value.length) {\n                        continue;\n                    }\n\n                    obj = [];\n\n                    value.forEach(function (v) {\n                        var isBuiltIn = Object.prototype.toString.call(v).slice(8, -1) !== 'Object';\n\n                        obj.push(isBuiltIn ? v : serialise(v));\n                    });\n\n                    value = encodeURIComponent(obj.join(','));\n                } else if (typeof value === 'string') {\n                    value = encodeURIComponent(value);\n                } else if (value instanceof Date) {\n                    value = value.toISOString();\n                } else if (typeof value === 'number') {\n                    value = Math.round(value);\n                }\n\n                pairs.push(key + '=' + value);\n            }\n        }\n\n        // Concatenate the strings created in the previous step with an\n        // ampersand ('&') character between each one.\n        return pairs.join('&');\n    }\n\n    return {\n        serialise: serialise\n    };\n}\n\nMetricSerialiser.__dashjs_factory_name = 'MetricSerialiser';\nexport default FactoryMaker.getSingletonFactory(MetricSerialiser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction RNG() {\n\n    // check whether secure random numbers are available. if not, revert to\n    // using Math.random\n    let crypto = window.crypto || window.msCrypto;\n\n    // could just as easily use any other array type by changing line below\n    let ArrayType = Uint32Array;\n    let MAX_VALUE = Math.pow(2, ArrayType.BYTES_PER_ELEMENT * 8) - 1;\n\n    // currently there is only one client for this code, and that only uses\n    // a single random number per initialisation. may want to increase this\n    // number if more consumers in the future\n    let NUM_RANDOM_NUMBERS = 10;\n\n    let randomNumbers,\n        index,\n        instance;\n\n    function initialise() {\n        if (crypto) {\n            if (!randomNumbers) {\n                randomNumbers = new ArrayType(NUM_RANDOM_NUMBERS);\n            }\n            crypto.getRandomValues(randomNumbers);\n            index = 0;\n        }\n    }\n\n    function rand(min, max) {\n        var r;\n\n        if (!min) {\n            min = 0;\n        }\n\n        if (!max) {\n            max = 1;\n        }\n\n        if (crypto) {\n            if (index === randomNumbers.length) {\n                initialise();\n            }\n\n            r = randomNumbers[index] / MAX_VALUE;\n            index += 1;\n        } else {\n            r = Math.random();\n        }\n\n        return (r * (max - min)) + min;\n    }\n\n    instance = {\n        random: rand,\n    };\n\n    initialise();\n\n    return instance;\n}\n\nRNG.__dashjs_factory_name = 'RNG';\nexport default FactoryMaker.getSingletonFactory(RNG);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DVBErrors {\n    constructor() {\n        this.mpdurl = null;\n        // String - Absolute URL from which the MPD was originally\n        // retrieved (MPD updates will not change this value).\n\n        this.errorcode = null;\n        // String - The value of errorcode depends upon the type\n        // of error being reported. For an error listed in the\n        // ErrorType column below the value is as described in the\n        // Value column.\n        //\n        // ErrorType                                            Value\n        // ---------                                            -----\n        // HTTP error status code                               HTTP status code\n        // Unknown HTTP status code                             HTTP status code\n        // SSL connection failed                                \"SSL\" followed by SSL alert value\n        // DNS resolution failed                                \"C00\"\n        // Host unreachable                                     \"C01\"\n        // Connection refused                                   \"C02\"\n        // Connection error – Not otherwise specified           \"C03\"\n        // Corrupt media – ISO BMFF container cannot be parsed  \"M00\"\n        // Corrupt media – Not otherwise specified              \"M01\"\n        // Changing Base URL in use due to errors               \"F00\"\n        // Becoming an error reporting Player                   \"S00\"\n\n        this.terror = null;\n        // Real-Time - Date and time at which error occurred in UTC,\n        // formatted as a combined date and time according to ISO 8601.\n\n        this.url = null;\n        // String - Absolute URL from which data was being requested\n        // when this error occurred. If the error report is in relation\n        // to corrupt media or changing BaseURL, this may be a null\n        // string if the URL from which the media was obtained or\n        // which led to the change of BaseURL is no longer known.\n\n        this.ipaddress = null;\n        // String - IP Address which the host name in \"url\" resolved to.\n        // If the error report is in relation to corrupt media or\n        // changing BaseURL, this may be a null string if the URL\n        // from which the media was obtained or which led to the\n        // change of BaseURL is no longer known.\n\n        this.servicelocation = null;\n        // String - The value of the serviceLocation field in the\n        // BaseURL being used. In the event of this report indicating\n        // a change of BaseURL this is the value from the BaseURL\n        // being moved from.\n    }\n}\n\nDVBErrors.SSL_CONNECTION_FAILED_PREFIX = 'SSL';\nDVBErrors.DNS_RESOLUTION_FAILED =        'C00';\nDVBErrors.HOST_UNREACHABLE =             'C01';\nDVBErrors.CONNECTION_REFUSED =           'C02';\nDVBErrors.CONNECTION_ERROR =             'C03';\nDVBErrors.CORRUPT_MEDIA_ISOBMFF =        'M00';\nDVBErrors.CORRUPT_MEDIA_OTHER =          'M01';\nDVBErrors.BASE_URL_CHANGED =             'F00';\nDVBErrors.BECAME_REPORTER =              'S00';\n\nexport default DVBErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Metrics {\n    constructor() {\n\n        this.metrics = '';\n        this.Range = [];\n        this.Reporting = [];\n    }\n}\n\nexport default Metrics;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Range {\n    constructor() {\n\n        // as defined in ISO23009-1\n        this.starttime = 0;\n        this.duration = Infinity;\n\n        // for internal use\n        this._useWallClockTime = false;\n    }\n}\n\nexport default Range;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Reporting {\n    constructor() {\n        // Reporting is a DescriptorType and doesn't have any additional fields\n        this.schemeIdUri = '';\n        this.value = '';\n    }\n}\n\nexport default Reporting;\n","﻿/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction CustomTimeRanges(/*config*/) {\n    let customTimeRangeArray = [];\n    let length = 0;\n\n    function add(start, end) {\n        var i = 0;\n\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++);\n\n        this.customTimeRangeArray.splice(i, 0, {start: start,end: end});\n\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\n            if (this.mergeRanges(i,i + 1)) {\n                i--;\n            }\n        }\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function clear() {\n        this.customTimeRangeArray = [];\n        this.length = 0;\n    }\n\n    function remove(start, end) {\n        for (var i = 0; i < this.customTimeRangeArray.length; i++) {\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\n                //      |--------------Range i-------|\n                //|---------------Range to remove ---------------|\n                //    or\n                //|--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                //    or\n                //                 |--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                this.customTimeRangeArray.splice(i,1);\n                i--;\n\n            }else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //|-----------------Range i----------------|\n                //        |-------Range to remove -----|\n                this.customTimeRangeArray.splice(i + 1, 0, {start: end,end: this.customTimeRangeArray[i].end});\n                this.customTimeRangeArray[i].end = start;\n                break;\n            }else if ( start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\n                //|-----------Range i----------|\n                //                    |---------Range to remove --------|\n                //    or\n                //|-----------------Range i----------------|\n                //            |-------Range to remove -----|\n                this.customTimeRangeArray[i].end = start;\n            }else if ( end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //                     |-----------Range i----------|\n                //|---------Range to remove --------|\n                //            or\n                //|-----------------Range i----------------|\n                //|-------Range to remove -----|\n                this.customTimeRangeArray[i].start = end;\n            }\n        }\n\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function mergeRanges(rangeIndex1, rangeIndex2) {\n        var range1 = this.customTimeRangeArray[rangeIndex1];\n        var range2 = this.customTimeRangeArray[rangeIndex2];\n\n        if (range1.start <=  range2.start && range2.start <= range1.end && range1.end <= range2.end) {\n            //|-----------Range1----------|\n            //                    |-----------Range2----------|\n            range1.end = range2.end;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\n            //                |-----------Range1----------|\n            //|-----------Range2----------|\n            range1.start = range2.start;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\n            //      |--------Range1-------|\n            //|---------------Range2--------------|\n            this.customTimeRangeArray.splice(rangeIndex1,1);\n            return true;\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\n            //|-----------------Range1--------------|\n            //        |-----------Range2----------|\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        }\n        return false;\n    }\n\n    function start(index) {\n        return this.customTimeRangeArray[index].start;\n    }\n\n    function end(index) {\n        return this.customTimeRangeArray[index].end;\n    }\n\n    return {\n        customTimeRangeArray: customTimeRangeArray,\n        length: length,\n        add: add,\n        clear: clear,\n        remove: remove,\n        mergeRanges: mergeRanges,\n        start: start,\n        end: end\n    };\n}\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);"]}